{
    "version": 3,
    "sources": [
        "../../../../core/BuildSystem.ff"
    ],
    "sourcesContent": [
        "capability BuildSystem {}\r\n\r\nextend self: BuildSystem {\r\n\r\n    compileForBrowser(mainFiles: List[String]): AssetSystem {\r\n        // TODO: Check that the mainFile is in the current package directory\r\n        internalCompile(self, mainFiles.map {internalPath(self, _)}, \"browser\")\r\n        let streams = internalListDirectory(internalPath(self, \".firefly/output/browser\"))\r\n        let mainPackagePair = internalMainPackagePair(self)\r\n        AssetSystem(streams.toMap())\r\n    }\r\n\r\n    bundleForBrowser(mainFiles: List[String], minify: Bool = True, sourceMaps: Bool = False): AssetSystem {\r\n        internalCompile(self, mainFiles.map {internalPath(self, _)}, \"browser\")\r\n        let browserOutputPath = internalPath(self, \".firefly/output/browser\")\r\n        let runPaths = internalListPath(browserOutputPath).filter {_.base().endsWith(\".run.mjs\")}.toList()\r\n        if(Js.globalThis()->ffDevelopMode.typeof() == \"undefined\") {\r\n            let outputPath = runPaths.grabFirst().parent().grab()\r\n            let start = self.mainTask().elapsed()\r\n            internalBrowserCallEsBuild(self, runPaths.map {_.absolute()}, outputPath.absolute(), minify, sourceMaps)\r\n            let bundlePaths = runPaths.flatMap {p =>\r\n                let outputPath = p.parent().grab()\r\n                let bundlePath = outputPath.slash(p.base().removeLast(\".mjs\").grab() + \".bundle.js\")\r\n                let mapPath = outputPath.slash(p.base().removeLast(\".mjs\").grab() + \".bundle.js.map\")\r\n                [bundlePath, mapPath]\r\n            }\r\n            AssetSystem(bundlePaths.map {p => \r\n                Pair(\"/\" + p.relativeListTo(browserOutputPath).join(\"/\"), {p.readStream()})\r\n            }.toMap())\r\n        } else {\r\n            mutable built = Set.new()\r\n            let lock = self.mainTask().lock()\r\n            AssetSystem(runPaths.flatMap {p =>\r\n                let outputPath = p.parent().grab()\r\n                let bundlePath = outputPath.slash(p.base().removeLast(\".mjs\").grab() + \".bundle.js\")\r\n                let mapPath = outputPath.slash(p.base().removeLast(\".mjs\").grab() + \".bundle.js.map\")\r\n                let bundleAssetPath = \"/\" + bundlePath.relativeListTo(browserOutputPath).join(\"/\")\r\n                let mapAssetPath = \"/\" + mapPath.relativeListTo(browserOutputPath).join(\"/\")\r\n                function bundle() {\r\n                    lock.do {\r\n                        if(!built.contains(p.absolute())) {\r\n                            internalBrowserCallEsBuild(self, [p.absolute()], outputPath.absolute(), minify, sourceMaps)\r\n                            built = built.add(p.absolute())\r\n                        }\r\n                        bundlePath.readStream()\r\n                    }\r\n                }\r\n                let bundleEntry = Pair(bundleAssetPath, {\r\n                    bundle()\r\n                    bundlePath.readStream()\r\n                })\r\n                let mapEntry = Pair(mapAssetPath, {\r\n                    bundle()\r\n                    mapPath.readStream()\r\n                })\r\n                [bundleEntry, mapEntry]\r\n            }.toMap())\r\n        }\r\n    }\r\n\r\n    buildMode(): Bool {\r\n        !!self!->\"buildMode_\"?\r\n    }\r\n    \r\n    setAssets(assetSystem: AssetSystem): Unit {\r\n        self!->\"assets_\" = assetSystem!\r\n    }\r\n\r\n    packageAssets(): AssetSystem {\r\n        let streams = internalListDirectory(internalPath(self, \".\"))\r\n        AssetSystem(streams.toMap())\r\n    }\r\n\r\n    dependencyAssets(user: String, package: String): AssetSystem {\r\n        panic(\"dependencyAssets not yet implemented\")\r\n    }\r\n\r\n    arguments(): List[String] {\r\n        self!->\"array_\"?\r\n    }\r\n\r\n    mainTask(): Task {\r\n        self!->\"task_\"?\r\n    }\r\n\r\n    crypto(): Crypto {\r\n        Js->crypto?\r\n    }\r\n        \r\n}\r\n\r\ninternalBrowserCallEsBuild(\r\n    self: BuildSystem\r\n    mainJsFiles: List[String]\r\n    outputPath: String\r\n    minify: Bool\r\n    sourceMap: Bool\r\n): Unit {\r\n    let esbuild = Js.import(\"esbuild\")\r\n    Js.await(esbuild->build(Js->(\r\n        entryPoints = mainJsFiles\r\n        bundle = True\r\n        minify = minify\r\n        sourcemap = sourceMap\r\n        platform = \"browser\"\r\n        target = \"es2017\"\r\n        outdir = outputPath\r\n        outExtension = Js.object().with(\".js\", \".bundle.js\")\r\n    )))\r\n}\r\n\r\ninternalNodeCallEsBuild(\r\n    self: NodeSystem\r\n    mainJsFile: String\r\n    outputPath: String\r\n    minify: Bool\r\n): Unit {\r\n    let esbuild = Js.import(\"esbuild\")\r\n    Js.await(esbuild->build(Js->(\r\n        entryPoints = [mainJsFile]\r\n        bundle = True\r\n        minify = minify\r\n        sourcemap = True\r\n        platform = \"node\"\r\n        target = \"es2017\"\r\n        external = [\"esbuild\", \"uws.js\"]\r\n        loader = Js.object().with(\".node\", \"copy\")\r\n        outfile = outputPath\r\n    )))    \r\n}\r\n\r\ninternalNodeCallEsBuildContext(\r\n    self: NodeSystem\r\n    mainJsFile: String\r\n    outputPath: String\r\n    minify: Bool\r\n): JsValue {\r\n    let esbuild = Js.import(\"esbuild\")\r\n    Js.await(esbuild->context(Js->(\r\n        entryPoints = [mainJsFile]\r\n        bundle = True\r\n        minify = minify\r\n        sourcemap = True\r\n        platform = \"node\"\r\n        target = \"es2017\"\r\n        external = [\"esbuild\", \"uws.js\"]\r\n        loader = Js.object().with(\".node\", \"copy\")\r\n        outfile = outputPath\r\n    )))    \r\n}\r\n\r\ninternalListDirectory(path: Path): List[Pair[String, () => Stream[Buffer]]] {\r\n    function go(currentPath: Path): Stream[Path] {\r\n        currentPath.entries().flatMap {file =>\r\n            if(file.isDirectory()) {\r\n                go(file.path())\r\n            } else {\r\n                [file.path()].toStream()\r\n            }\r\n        }\r\n    }\r\n    go(path).map {file =>\r\n        Pair(\"/\" + file.relativeTo(path).replace(\"\\\\\", \"/\"), {file.readStream()})\r\n    }.toList()\r\n}\r\n\r\ninternalListPath(path: Path): Stream[Path] {\r\n    path.entries().flatMap {file =>\r\n        if(file.isDirectory()) {\r\n            internalListPath(file.path())\r\n        } else {\r\n            [file.path()].toStream()\r\n        }\r\n    }\r\n}\r\n\r\ninternalPath(buildSystem: BuildSystem, absoluteOrRelative: String): Path {\r\n    let nodePath = Js.import(\"path\")\r\n    Path(nodePath->resolve(absoluteOrRelative)?)\r\n}\r\n\r\ninternalCompile(buildSystem: BuildSystem, mainFiles: List[Path], target: String): Unit {\r\n    if(Js.globalThis()->ffDevelopMode.typeof() != \"undefined\") {\r\n        Js->process->send(Js->(\r\n            ffDevelopMode = \"internalCompile\"\r\n            mainFiles = mainFiles.map {_.absolute()}\r\n            target = target\r\n        ))\r\n        Js.awaitCancellablePromise {resolve, reject, cleanup =>\r\n            Js->process->on(\"message\", Js->{message => \r\n                if(message->ffDevelopMode === \"internalCompile\") {\r\n                    resolve(Unit) // Handle errors?\r\n                }\r\n            })\r\n        }\r\n    } else:\r\n    // Ported from the old FFI. It's quite fragile w.r.t. changes in code generation.\r\n    Js.await(Js.rawIdentifier(\"$firefly_compiler\")->\"buildViaBuildSystem_$\"(\r\n        buildSystem! \r\n        internalPath(buildSystem, buildSystem!->\"fireflyPath_\"?)!\r\n        mainFiles!\r\n        target\r\n        Js.undefined()\r\n        Js.undefined()\r\n        Js.currentTask()!\r\n    ))\r\n}\r\n\r\ninternalMainPackagePair(buildSystem: BuildSystem): Pair[String, String] {\r\n    Pair(buildSystem!->\"mainPackagePair_\"->\"group_\"?, buildSystem!->\"mainPackagePair_\"->\"name_\"?)\r\n}\r\n"
    ],
    "names": [
        "internalBrowserCallEsBuild",
        "self",
        "mainJsFiles",
        "outputPath",
        "minify",
        "sourceMap",
        "esbuild",
        "build",
        "entryPoints",
        "bundle",
        "sourcemap",
        "platform",
        "target",
        "outdir",
        "outExtension",
        "internalNodeCallEsBuild",
        "mainJsFile",
        "external",
        "loader",
        "outfile",
        "internalNodeCallEsBuildContext",
        "context",
        "internalListDirectory",
        "path",
        "go",
        "currentPath",
        "flatMap",
        "entries",
        "file",
        "isDirectory",
        "toStream",
        "toList",
        "map",
        "Pair",
        "replace",
        "relativeTo",
        "readStream",
        "internalListPath",
        "internalPath",
        "buildSystem",
        "absoluteOrRelative",
        "nodePath",
        "Path",
        "resolve",
        "internalCompile",
        "mainFiles",
        "ffDevelopMode",
        "\"process\"",
        "send",
        "w1",
        "absolute",
        "awaitCancellablePromise",
        "reject",
        "cleanup",
        "on",
        "message",
        "internalMainPackagePair",
        "compileForBrowser",
        "streams",
        "mainPackagePair",
        "AssetSystem",
        "toMap",
        "bundleForBrowser",
        "sourceMaps",
        "browserOutputPath",
        "runPaths",
        "filter",
        "endsWith",
        "base",
        "grab",
        "parent",
        "grabFirst",
        "start",
        "elapsed",
        "mainTask",
        "bundlePaths",
        "p",
        "bundlePath",
        "slash",
        "removeLast",
        "mapPath",
        "join",
        "relativeListTo",
        "built",
        "new",
        "lock",
        "bundleAssetPath",
        "mapAssetPath",
        "do",
        "contains",
        "add",
        "bundleEntry",
        "mapEntry",
        "buildMode",
        "setAssets",
        "assetSystem",
        "packageAssets",
        "dependencyAssets",
        "user",
        "package",
        "panic",
        "arguments",
        "crypto",
        "\"crypto\""
    ],
    "mappings": "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"
}