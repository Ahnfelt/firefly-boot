{
    "version": 3,
    "sources": [
        "../../../../../core/Show.ff"
    ],
    "sourcesContent": [
        "trait T: Show {\r\n    show(value: T): String\r\n}\r\n\r\ninstance Bool: Show {\r\n    show(value: Bool): String {\r\n        | False => \"False\"\r\n        | True => \"True\"\r\n    }\r\n}\r\n\r\ninstance Nothing: Show {\r\n    show(value: Nothing): String {\"\"}\r\n}\r\n\r\ninstance Char: Show {\r\n    show(value: Char): String {value.toString()}\r\n}\r\n\r\ninstance Int: Show {\r\n    show(value: Int): String {\"\" + value}\r\n}\r\n\r\ninstance Float: Show {\r\n    show(value: Float): String {\"\" + value}\r\n}\r\n\r\ninstance String: Show {\r\n    show(value: String): String {\r\n        Js->JSON->stringify(value)?\r\n    }\r\n}\r\n\r\ninstance List[T: Show]: Show {\r\n    show(value: List[T]): String {\r\n        \"[\" + value.map(show).join(\", \") + \"]\"\r\n    }\r\n}\r\n\r\ninstance Pair[A: Show, B: Show]: Show {\r\n    show(value: Pair[A, B]): String {\r\n        \"Pair(\" + show(value.first) + \", \" + show(value.second) + \")\"\r\n    }\r\n}\r\n"
    ],
    "names": [
        "Bool",
        "show",
        "value",
        "Nothing",
        "Char",
        "toString",
        "Int",
        "Float",
        "String",
        "\"JSON\"",
        "stringify",
        "List",
        "join",
        "map",
        "Pair",
        "first",
        "second"
    ],
    "mappings": "A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77AAIesaAAAAsmCAAAsGAAA7AACXsAAAACsKAAAsCAAKCsMAALsCAAA7AAAKsMAAAAsOAAAsGAAAAsMAAA7AACDsGAAEsCADDAsOACD7AAAWsOAAA7AAAX7AACA7AAAUsOAAA7AAAV7AAFJsCADW7AACXsMAAADsMAAAsCAAKCsMsEAALsKAAAsCAAA7AAAKsMAAAAsOAAAsGAAAAsMAAA7AACDsGAAEsCADDAsOACD7AAAWsOAAA7AAAX7AACA7AAAUsOAAA7AAAV7AAFJsCADW7AAAAsCAAA77AAOGsaAAACsyCAAAsGAAA7AACdsAAAAFsKAAAsCAAKCsMAALsCAAA7AAA8BsOAAA7AAA9BsCADc7AACdsMAAADsMAAAsCAAKCsMsEAALsKAAAsCAAA7AAA8BsOAAA7AAA9BsCADc7AAAAsCAAA77AAIHsaAAAEsmCAAAsGAAA7AACXsAAAAHsKAAAsCAAKCsMAALsCAAA7AAAiCsOAAAGs0BAAAsCAANHsMAAM7AAAjCsCADW7AACXsMAAADsMAAAsCAAKCsMsEAALsKAAAsCAAA7AAAiCsOAAAGs0BAAAsCAANHsMAAM7AAAjCsCADW7AAAAsCAAA77AAIDsaAAAIsiCAAAsGAAA7AACVsAAAALsKAAAsCAAKCsMAALsCAAA7AAA6BsOAAAsCAAHsEAAGsCAAAsCAAAsCAAEAsMAAF7AAA7BsCADU7AACVsMAAADsMAAAsCAAKCsMsEAALsKAAAsCAAA7AAA6BsOAAAsCAAHsEAAGsCAAAsCAAAsCAAEAsMAAF7AAA7BsCADU7AAAAsCAAA77AAIEsaAAAKsqCAAAsGAAA7AACZsAAAANsKAAAsCAAKCsMAALsCAAA7AAA+BsOAAAsCAAHsEAAGsCAAAsCAAAsCAAEAsMAAF7AAA/BsCADY7AACZsMAAADsMAAAsCAAKCsMsEAALsKAAAsCAAA7AAA+BsOAAAsCAAHsEAAGsCAAAsCAAAsCAAEAsMAAF7AAA/BsCADY7AAAAsCAAA77AAICsaAAAMsuCAAAsGAAA7AACbsAAAAPsKAAAsCAAKCsMAALsCAAA7AAC8BsOAAtBOsIAAMsCAAACsSAAVsCAAoBRsMAApB7AADJsCADa7AACbsMAAADsMAAAsCAAKCsMsEAALsKAAAsCAAA7AAC8BsOAAtBOsIAAMsCAAACsSAAVsCAAoBRsMAApB7AADJsCADa7AAAAsCAAA77AAMOsgBAAASsmCAAAs+BAAA7AACpBsAAAAVsKAAAsCAAKCsMAALsCAAA7AACqCsOAAAsCAA7BsCAAJsGAAIsCAAAsCAAAsCAAkBUssBAAAsCAAVCsqBAAAsCAANXsMsEAAUsCAAAsCAAAAsMAAA7AAAAsOAAAsmBAAAsCAAADsKAAAsCAAACsMAAA7AAAAsEAAJsCsEAAesIAALsCAAlBsCAA6BsCAAAsCAAAsCAAEsGAAF7AADrCsCADoB7AACpBsMAAADsMAAAsCAAKCsMsEAALsKAAAsCAAA7AACqCsOAAAsCAA7BsCAAJsGAAIsCAAAsCAAAsCAAkBUssBAAAsCAAVCsqBAAAsCAANXsMsEAAUsCAAAsCAAAAsMAAA7AAAAsOAAAsmBAAAsCAAADsKAAAsCAAACsMAAA7AAAAsEAAJsCsEAAesIAALsCAAlBsCAA6BsCAAAsCAAAsCAAEsGAAF7AADrCsCADoB7AAAAsCAAA77AAMSsgBAAAYsmCAAAsoDAAA7AAC7BsAAAAbsKAAAsCAAKCsMAALsCAAA7AAC4DsOAAAsCAArBsCAAPsCAApBsCAARsOAAQsCAAAsCAAAsCAAEsmBAAAsCAAADsKAAAsCAAKCsMAAMsCAAAasMAAXsCAAFsCAAoBsCAAAsCAAAsCAAEsIAAFsCAAOsCAAAsCAAAsCAAEsmBAAAsCAAAdsKAAAsCAAKCsMAAMsCAAAcsOAAXsCAAFsCAAqBsCAAAsCAAAsCAAEsGAAF7AAD5DsCAD6B7AAC7BsMAAAfsMAAAsCAAKCsMsEAALsKAAAsCAAA7AAC4DsOAAAsCAArBsCAAPsCAApBsCAARsOAAQsCAAAsCAAAsCAAEsmBAAAsCAAADsKAAAsCAAKCsMAAMsCAAAasMAAXsCAAFsCAAoBsCAAAsCAAAsCAAEsIAAFsCAAOsCAAAsCAAAsCAAEsmBAAAsCAAAdsKAAAsCAAKCsMAAMsCAAAcsOAAXsCAAFsCAAqBsCAAAsCAAAsCAAEsGAAF7AAD5DsCAD6B7AAAAsCAAA"
}