{
    "version": 3,
    "sources": [
        "../../../../../core/Core.ff"
    ],
    "sourcesContent": [
        "if[T](condition: Bool, body: () => T): Option[T] {\r\n    condition.{\r\n        | False => None\r\n        | True => Some(body())\r\n    }\r\n}\r\n\r\nwhile(condition: () => Bool, body: () => Unit): Unit {\r\n    condition().{\r\n        | False =>\r\n        | True =>\r\n            body()\r\n            tailcall while(condition, body)\r\n    }\r\n}\r\n\r\ndoWhile(body: () => Bool): Unit {\r\n    while {body()} {}\r\n}\r\n\r\ndoUntil[T](body: () => Option[T]): T {\r\n    body().{\r\n        | Some(v) => v\r\n        | None => tailcall doUntil(body)\r\n    }\r\n}\r\n\r\ndo[T](body: () => T): T {\r\n    body()\r\n}\r\n\r\ntry[T](body: () => T): Try[T] {\r\n    // Special cased by the compiler\r\n    try {\r\n        Success(body())\r\n    } catchAny {e =>\r\n        Failure(e)\r\n    }\r\n}\r\n\r\nthrow[E: HasAnyTag: Show, T](exception: E): T {\r\n    throwWithMessage(exception, Show.show(exception))\r\n}\r\n\r\nthrowWithMessage[E: HasAnyTag, T](exception: E, message: String): T {\r\n    let e = Js->Error->(message)\r\n    e->ffException = Any.toAny(exception)!\r\n    Js.throw(e)\r\n}\r\n\r\npanic[T](message: String): T {\r\n    Js.throw(Js->Error->(message))\r\n}\r\n\r\ndata GrabException()\r\n"
    ],
    "names": [
        "GrabException",
        "if",
        "condition",
        "body",
        "None",
        "Some",
        "while",
        "doWhile",
        "doUntil",
        "v",
        "do",
        "try",
        "Success",
        "e",
        "Failure",
        "throw",
        "exception",
        "throwWithMessage",
        "show",
        "message",
        "\"Error\"",
        "ffException",
        "toAny",
        "panic",
        "anyTag",
        "internalAnyTag",
        "value",
        "z"
    ],
    "mappings": "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"
}