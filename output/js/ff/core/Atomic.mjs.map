{
    "version": 3,
    "sources": [
        "../../../../../core/Atomic.ff"
    ],
    "sourcesContent": [
        "class Atomic[T] {}\n\nnew[T](value: T): Atomic[T] {\n    Js->(value = value!)?\n}\n\nextend self[T]: Atomic[T] {\n\n    modify(body: T => T): T {\n        if(Js.inAsync()) {\n            mutable currentValue = self!->value\n            mutable newValue = body(self!->value?)\n            while {currentValue !== self!->value} {\n                currentValue = self!->value\n                newValue = body(self!->value?)\n            }\n            self!->value = newValue!\n            newValue\n        } else {\n            let newValue = body(self!->value?)\n            self!->value = newValue!\n            newValue\n        }\n    }\n\n    getAndModify(body: T => T): T {\n        mutable currentValue = self!->value\n        if(Js.inAsync()) {\n            mutable newValue = body(self!->value?)\n            while {currentValue !== self!->value} {\n                currentValue = self!->value\n                newValue = body(self!->value?)\n            }\n            self!->value = newValue!\n            currentValue?\n        } else {\n            let newValue = body(self!->value?)\n            self!->value = newValue!\n            currentValue?\n        }\n    }\n\n    get(): T {\n        self!->value?\n    }\n\n    set(value: T): Unit {\n        self!->value = value!\n    }\n\n    getAndSet(newValue: T): T {\n        let currentValue = self!->value\n        self!->value = newValue!\n        currentValue?\n    }\n\n    compareAndSet(currentValue: T, newValue: T): Bool {\n        if(self!->value !== currentValue!) {False} else:\n        self!->value = newValue!\n        True\n    }\n\n}\n"
    ],
    "names": [
        "new",
        "value",
        "modify",
        "self",
        "body",
        "currentValue",
        "newValue",
        "getAndModify",
        "get",
        "set",
        "getAndSet",
        "compareAndSet"
    ],
    "mappings": "A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77A77AAAM777AsOAENsSAAAAsIAAAsCAAOCsMAAPsCAAA7AACwBsOAApBsCAAKsAAAAAsKAALsEAAaAsMAAb7AADJ77AsOAAAseAAADsKAAAsCAAOCsMsEAAPsKAAAsCAAA7AACwBsOAApBsCAAKsAAAAAsKAALsEAAaAsMAAb7AADJ77AAIOsOAEHsSAAACsaAAAsCAFGCsKsEAEICsKAAPsCAAA7AACUsGAAAsKAAA7AACMsIAAACsaAAAsGAAeFsKAAOsCAAAFsKAAtB7AACAsIAAAKsSAAAsGAAWFsKAAAsCAAKDsKAAOsCAAAFsKAAZsCAAX7AACRsKAAAsCAAoBsCAAbIsaAAasKAAIFsKAAOsCAAAFsKAAXsCAApB7AACIIsaAAAsGAAeFsKAAOsCAAAFsKACtC7AAAgBKsSAAAsGAAWFsKAAAsCAAKDsKAAOsCAAAFsKAAZ7AAFfsCAIZ7AAAYEsKAAOsCAAAFsKAAHsGAAWKsSAC3B7AAAYsOAAAA7AAREsOASJ7AACMsMAAAAsSAAAsGAAWFsKAAAsCAAKDsKAAOsCAAAFsKAAZsCAAX7AACJEsKAAOsCAAAFsKAAHsGAAWKsSAC3B7AAAYsOAAAA7AAHF7AAVN77AAFGsOAmBHsSAAACsmBAAAsCAnBGJsKsEAmBUCsKAAbsCAAA7AACYsIAAACsaAAAsGAAeFsKAAOsCAAAFsKAAtB7AACFsGAAAsKAAA7AACMsIAAAKsSAAAsGAAWFsKAAAsCAAKDsKAAOsCAAAFsKAAZsCAAX7AACRsKAAAsCAAoBsCAAbIsaAAasKAAIFsKAAOsCAAAFsKAAXsCAApB7AACIIsaAAAsGAAeFsKAAOsCAAAFsKACtC7AAAgBKsSAAAsGAAWFsKAAAsCAAKDsKAAOsCAAAFsKAAZ7AAFfsCAIZ7AAAYEsKAAOsCAAAFsKAAHsGAAWKsSAC3B7AAAwBsOAAZD7AAPEsOAQJ7AACMsMAAACsSAAAsGAAWFsKAAAsCAAKDsKAAOsCAAAFsKAAZsCAAX7AACJEsKAAOsCAA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"
}