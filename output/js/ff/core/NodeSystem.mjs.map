{
    "version": 3,
    "sources": [
        "../../../../core/NodeSystem.ff"
    ],
    "sourcesContent": [
        "capability NodeSystem {}\r\n\r\nclass ProcessResult(exitCode: Int, standardOut: Buffer, standardError: Buffer)\r\ndata ProcessException(problem: String)\r\n\r\nextend self: NodeSystem {\r\n\r\n    arguments(): List[String] {\r\n        self!->\"array_\"?\r\n    }\r\n\r\n    assets(): AssetSystem {\r\n        let assetPkgSnapshotPath = self.path(\"/snapshot/output/assets\")\r\n        if(assetPkgSnapshotPath.isDirectory()) {\r\n            // Opendir gives ENOENT: no such file or directory, opendir '/snapshot/output/assets'\r\n            function streams(path: Path): Stream[Pair[String, () => Stream[Buffer]]] {\r\n                internalListDirectoryWithoutOpendir(self, path).toStream().flatMap {file =>\r\n                    if(file.isDirectory()) {\r\n                        streams(file)\r\n                    } else {\r\n                        [Pair(\"/\" + file.relativeTo(assetPkgSnapshotPath), {file.readStream()})].toStream()\r\n                    }\r\n                }\r\n            }\r\n            AssetSystem(streams(assetPkgSnapshotPath).toMap())\r\n        } else {\r\n            self!->\"assets_\"?\r\n        }\r\n    }\r\n\r\n    path(relativePath: String): Path {\r\n        let nodePath = Js.import(\"path\")\r\n        Path(nodePath->resolve(relativePath)?)\r\n    }\r\n\r\n    pathFromUrl(url: String): Path {\r\n        let nodeUrl = Js.import(\"url\")\r\n        Path(nodeUrl->fileURLToPath(Js->URL->(url))?)\r\n    }\r\n\r\n    httpClient(): HttpClient {\r\n        Js.globalThis()?\r\n    }\r\n\r\n    mainTask(): Task {\r\n        self!->\"task_\"?\r\n    }\r\n\r\n    crypto(): Crypto {\r\n        Js.globalThis()->crypto?\r\n    }\r\n\r\n    js(): JsSystem {\r\n        Js.jsSystem()\r\n    }\r\n\r\n    date(timeZoneId: Option[String] = None, calendarId: String = Date.isoCalendarId): Date {\r\n        let date = Date(Js->Temporal->Now->zonedDateTimeISO(timeZoneId.map {_!}.else {Js.undefined()}))\r\n        if(calendarId == Date.isoCalendarId) {date} else {date.withCalendar(calendarId)}\r\n    }\r\n\r\n    exit[T](exitCode: Int = 0): T {\r\n        Js->process->exit(exitCode)?\r\n    }\r\n\r\n    readStream(): Stream[Buffer] {\r\n        Path.internalReadStream {Js->process->stdin}\r\n    }\r\n\r\n    writeBuffer(buffer: Buffer): Unit {\r\n        Js->process->stdout->write(Js->Uint8Array->(buffer!->buffer, buffer!->byteOffset, buffer!->byteLength))\r\n    }\r\n\r\n    writeStream(stream: Stream[Buffer]): Unit {\r\n        stream.each {self.writeBuffer(_)}\r\n    }\r\n\r\n    writeText(text: String): Unit {\r\n        self.writeBuffer(text.toBuffer())\r\n    }\r\n\r\n    writeLine(text: String): Unit {\r\n        self.writeText(text + \"\\n\")\r\n    }\r\n\r\n    writeErrorBuffer(buffer: Buffer): Unit {\r\n        Js->process->stderr->write(Js->Uint8Array->(buffer!->buffer, buffer!->byteOffset, buffer!->byteLength))\r\n    }\r\n\r\n    writeErrorStream(stream: Stream[Buffer]): Unit {\r\n        stream.each {self.writeErrorBuffer(_)}\r\n    }\r\n\r\n    writeErrorText(text: String): Unit {\r\n        self.writeErrorBuffer(text.toBuffer())\r\n    }\r\n\r\n    writeErrorLine(text: String): Unit {\r\n        self.writeErrorText(text + \"\\n\")\r\n    }\r\n    \r\n    environment(): Map[String, String] {\r\n        mutable result = Map.new()\r\n        Js->process->env.each {key =>\r\n            result = result.add(key?, Js->process->env.get(key)?)\r\n        }\r\n        result\r\n    }\r\n\r\n    execute(\r\n        command: String\r\n        arguments: List[String]\r\n        standardIn: Buffer = Buffer.new(0)\r\n        directory: Option[Path] = None\r\n        environment: Option[Map[String, String]] = None\r\n        maxBuffer: Int = 16777216\r\n        killSignal: Int = 9\r\n        shell: Bool = False\r\n        node: Option[(JsValue, JsValue) => Unit] = None\r\n    ): ProcessResult {\r\n        let inheritStdio = !node.isEmpty()\r\n        let childProcess = Js.import(\"node:child_process\")\r\n        let env = environment.map {e =>\r\n            let o = Js.object()\r\n            e.each {k, v => o.set(k, v)}\r\n            o\r\n        }.else {Js->process->env}\r\n        Js.withSignal {signal => Js.awaitCancellablePromise {resolve, reject, onSettle =>\r\n            let newProcess = if(!node.isEmpty()) {\r\n                let p = childProcess->fork(command, arguments, Js->(\r\n                    cwd = directory.map {_.absolutePath!}.else {Js.undefined()}\r\n                    signal = signal\r\n                    killSignal = killSignal\r\n                    env = env\r\n                    silent = True\r\n                    stdio = if(inheritStdio) {\"inherit\"} else {\"pipe\"}\r\n                ))\r\n                p->on(\"message\", Js->{message => node.grab()(message, p)})\r\n                p\r\n            } else {\r\n                childProcess->spawn(command, arguments, Js->(\r\n                    cwd = directory.map {_.absolutePath!}.else {Js.undefined()}\r\n                    windowsHide = True\r\n                    signal = signal\r\n                    killSignal = killSignal\r\n                    env = env\r\n                    shell = shell\r\n                ))\r\n            }\r\n            mutable size = 0\r\n            let out = Array.new()\r\n            let err = Array.new()\r\n            if(!inheritStdio) {\r\n                newProcess->stdout->on(\"data\", Js->{data =>\r\n                    if(size <= maxBuffer) {\r\n                        size += data->byteLength?\r\n                        if(size > maxBuffer) {\r\n                            newProcess->kill(killSignal)\r\n                        } else {\r\n                            out.push(data)\r\n                        }\r\n                    }\r\n                    Unit\r\n                })\r\n                newProcess->stderr->on(\"data\", Js->{data =>\r\n                    if(size <= maxBuffer) {\r\n                        size += data->byteLength?\r\n                        if(size > maxBuffer) {\r\n                            newProcess->kill(killSignal)\r\n                        } else {\r\n                            err.push(data)\r\n                        }\r\n                    }\r\n                    Unit\r\n                })\r\n                if(standardIn!->byteLength !== 0) {\r\n                    newProcess->stdin->write(standardIn!)\r\n                }\r\n                newProcess->stdin->end()\r\n            }\r\n            newProcess->on(\"error\", Js->{error =>\r\n                if(size > maxBuffer) {\r\n                    reject(internalProcessError(\"maxBuffer exceeded\"))\r\n                } else {\r\n                    reject(internalProcessError(error->message?))\r\n                }\r\n            })\r\n            newProcess->on(\"close\", Js->{code =>\r\n                let o = Js->Buffer->concat(out.drain()!)\r\n                let e = Js->Buffer->concat(err.drain()!)\r\n                resolve(ProcessResult(\r\n                    code?\r\n                    Js->DataView->(o->buffer, o->byteOffset, o->byteLength)?\r\n                    Js->DataView->(e->buffer, e->byteOffset, e->byteLength)?\r\n                ))\r\n            })\r\n            onSettle {fulfilled =>\r\n                if(!fulfilled) {\r\n                    newProcess->kill(killSignal)\r\n                }\r\n            }\r\n        }}\r\n    }\r\n\r\n}\r\n\r\ninternalListDirectoryWithoutOpendir(system: NodeSystem, path: Path): List[Path] {\r\n    let fsPromises = Js.import(\"fs/promises\")\r\n    let nodePath = Js.import(\"path\")\r\n    let files = Js.await(fsPromises->readdir(path.absolutePath))\r\n    files.grabArray().map {file => Path(nodePath->join(path.absolutePath, file)?)}\r\n}\r\n\r\ninternalProcessError(problem: String): Error {\r\n    try {\r\n        throw(ProcessException(problem))\r\n    } catchAny {error =>\r\n        error\r\n    }\r\n}\r\n"
    ],
    "names": [
        "ProcessResult",
        "exitCode",
        "standardOut",
        "standardError",
        "ProcessException",
        "problem",
        "internalListDirectoryWithoutOpendir",
        "system",
        "path",
        "fsPromises",
        "nodePath",
        "files",
        "readdir",
        "absolutePath",
        "map",
        "grabArray",
        "file",
        "Path",
        "join",
        "internalProcessError",
        "error",
        "arguments",
        "self",
        "assets",
        "assetPkgSnapshotPath",
        "isDirectory",
        "streams",
        "flatMap",
        "toStream",
        "Pair",
        "relativeTo",
        "readStream",
        "AssetSystem",
        "toMap",
        "relativePath",
        "resolve",
        "pathFromUrl",
        "url",
        "nodeUrl",
        "fileURLToPath",
        "\"URL\"",
        "httpClient",
        "mainTask",
        "crypto",
        "js",
        "date",
        "timeZoneId",
        "None",
        "calendarId",
        "isoCalendarId",
        "\"Temporal\"",
        "Now",
        "zonedDateTimeISO",
        "else",
        "w1",
        "withCalendar",
        "exit",
        "\"process\"",
        "internalReadStream",
        "stdin",
        "writeBuffer",
        "buffer",
        "stdout",
        "write",
        "\"Uint8Array\"",
        "byteOffset",
        "byteLength",
        "writeStream",
        "stream",
        "each",
        "writeText",
        "text",
        "toBuffer",
        "writeLine",
        "writeErrorBuffer",
        "stderr",
        "writeErrorStream",
        "writeErrorText",
        "writeErrorLine",
        "environment",
        "result",
        "new",
        "env",
        "key",
        "add",
        "execute",
        "command",
        "standardIn",
        "directory",
        "maxBuffer",
        "killSignal",
        "shell",
        "node",
        "inheritStdio",
        "isEmpty",
        "childProcess",
        "e",
        "o",
        "k",
        "v",
        "withSignal",
        "signal",
        "awaitCancellablePromise",
        "reject",
        "onSettle",
        "newProcess",
        "p",
        "fork",
        "cwd",
        "silent",
        "stdio",
        "on",
        "message",
        "grab",
        "spawn",
        "windowsHide",
        "size",
        "out",
        "err",
        "data",
        "kill",
        "end",
        "code",
        "\"Buffer\"",
        "concat",
        "drain",
        "\"DataView\"",
        "fulfilled",
        "anyTag",
        "internalAnyTag",
        "show",
        "value",
        "z"
    ],
    "mappings": "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"
}