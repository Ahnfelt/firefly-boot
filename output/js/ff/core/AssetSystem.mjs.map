{
    "version": 3,
    "sources": [
        "../../../../../core/AssetSystem.ff"
    ],
    "sourcesContent": [
        "capability AssetSystem(\r\n    files: Map[String, () => Stream[Buffer]]\r\n)\r\n\r\ncreate(): AssetSystem {\r\n    AssetSystem([].toMap())\r\n}\r\n\r\nextend self: AssetSystem {\r\n\r\n    addAssets(path: String, assets: AssetSystem): AssetSystem {\r\n        let prefix = if(path.endsWith(\"/\")) {path.dropLast(1)} else {path}\r\n        AssetSystem(\r\n            self.files.addAll(\r\n                assets.files.map {p, stream =>\r\n                     Pair(prefix + p, stream)\r\n                }\r\n            )\r\n        )\r\n    }\r\n\r\n    assets(path: String): AssetSystem {\r\n        let prefix = if(path.endsWith(\"/\")) {path} else {path + \"/\"}\r\n        let streams = self.files.pairs().collect {\r\n            | Pair(p, s) {p.startsWith(prefix)} => Some(Pair(p.dropFirst(prefix.size() - 1), s))\r\n            | _ => None\r\n        }\r\n        AssetSystem(streams.toMap())\r\n    }\r\n\r\n    asset(path: String): AssetSystem {\r\n        let name = path.reverse().takeWhile {_ != '/'}.reverse()\r\n        let streams = self.files.get(path).toList().map {s => Pair(\"/\" + name, s)}\r\n        AssetSystem(streams.toMap())\r\n    }\r\n\r\n    list(path: String): List[String] {\r\n        let prefix = if(path.endsWith(\"/\")) {path} else {path + \"/\"}\r\n        self.files.pairs().collect {\r\n            | Pair(p, _) {p.startsWith(prefix)} => Some(p.dropFirst(prefix.size()).takeWhile {_ != '/'})\r\n            | _ => None\r\n        }.distinct()\r\n    }\r\n\r\n    exists(path: String): Bool {\r\n        let prefix = if(path.endsWith(\"/\")) {path} else {path + \"/\"}\r\n        self.files.contains(path) || self.files.pairs().any {_.first.startsWith(prefix)}\r\n    }\r\n\r\n    readStream(file: String): Stream[Buffer] {\r\n        let makeStream = self.files.get(file).else {\r\n            panic(\"Asset not found for readStream: \" + file)\r\n        }\r\n        makeStream()\r\n    }\r\n\r\n    readText(file: String): String {\r\n        self.readStream(file).toString()\r\n    }\r\n\r\n}\r\n"
    ],
    "names": [
        "AssetSystem",
        "files",
        "create",
        "toMap",
        "addAssets",
        "self",
        "path",
        "assets",
        "prefix",
        "endsWith",
        "dropLast",
        "addAll",
        "map",
        "p",
        "stream",
        "Pair",
        "streams",
        "collect",
        "pairs",
        "s",
        "startsWith",
        "Some",
        "dropFirst",
        "None",
        "asset",
        "name",
        "reverse",
        "takeWhile",
        "w1",
        "toList",
        "get",
        "list",
        "distinct",
        "exists",
        "contains",
        "any",
        "first",
        "readStream",
        "file",
        "makeStream",
        "else",
        "panic",
        "readText",
        "toString"
    ],
    "mappings": "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"
}