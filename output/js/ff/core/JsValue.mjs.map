{
    "version": 3,
    "sources": [
        "../../../../../core/JsValue.ff"
    ],
    "sourcesContent": [
        "class JsValue {}\r\n\r\nextend self: JsValue {\r\n\r\n    grabString(): String {\r\n        if(!self.isString()) {throw(GrabException)}\r\n        self?\r\n    }\r\n\r\n    grabChar(): Char {\r\n        if(!self.isChar()) {throw(GrabException)}\r\n        self?\r\n    }\r\n\r\n    grabInt(): Int {\r\n        if(!self.isInt()) {throw(GrabException)}\r\n        self?\r\n    }\r\n\r\n    grabFloat(): Float {\r\n        if(!self.isFloat()) {throw(GrabException)}\r\n        self?\r\n    }\r\n\r\n    grabBool(): Bool {\r\n        if(!self.isBool()) {throw(GrabException)}\r\n        self?\r\n    }\r\n\r\n    grabArray(): List[JsValue] {\r\n        if(!self.isArray()) {throw(GrabException)}\r\n        self?\r\n    }\r\n\r\n    grabBuffer(): Buffer {\r\n        if(!self.isBuffer()) {throw(GrabException)}\r\n        self?\r\n    }\r\n        \r\n    grabJson(): Json {\r\n        self? // Should check first\r\n    }\r\n\r\n    equals[V: IsJsValue](value: V): Bool {\r\n        self === value\r\n    }\r\n\r\n    notEquals[V: IsJsValue](value: V): Bool {\r\n        self !== value\r\n    }\r\n\r\n    isString(): Bool {\r\n        self.typeof() == \"string\"\r\n    }\r\n    \r\n    isChar(): Bool {\r\n        Js->Number->isInteger(self)? && \r\n        Js->Math->abs(self)? <= Js->Number->\"MAX_SAFE_INTEGER\"? &&\r\n        self? >= 0 && \r\n        self? < 1114112\r\n    }\r\n    \r\n    isInt(): Bool {\r\n        Js->Number->isInteger(self)? && \r\n        Js->Math->abs(self)? <= Js->Number->\"MAX_SAFE_INTEGER\"?\r\n    }\r\n\r\n    isFloat(): Bool {\r\n        self.typeof() == \"number\"\r\n    }\r\n\r\n    isBool(): Bool {\r\n        self.typeof() == \"boolean\"\r\n    }\r\n\r\n    isArray(): Bool {\r\n        Js->Array->isArray(self)?\r\n    }\r\n\r\n    isObject(): Bool {\r\n        !self.isNull() && self.typeof() == \"object\"\r\n    }\r\n\r\n    isFunction(): Bool {\r\n        self.typeof() == \"function\"\r\n    }\r\n    \r\n    isBuffer(): Bool {\r\n        self.instanceof(Js->DataView)\r\n    }\r\n\r\n    isNull(): Bool {\r\n        self === Js.null()\r\n    }\r\n\r\n    isUndefined(): Bool {\r\n        self === Js.undefined()\r\n    }\r\n\r\n    isNullOrUndefined(): Bool {\r\n        self.isNull() || self.isUndefined()\r\n    }\r\n\r\n    isNan(): Bool {\r\n        self.typeof() == \"number\" && self !== self\r\n    }\r\n\r\n    isFinite(): Bool {\r\n        self.typeof() == \"number\" && Js->isFinite(self)?\r\n    }\r\n\r\n    get[K: IsJsValue](key: K): JsValue {\r\n        // Special cased by the compiler\r\n        self.get(key)\r\n    }\r\n\r\n    getOwn(key: String): Option[JsValue] {\r\n        if(self.hasOwn(key)) {Some(self.get(key))} else {None}\r\n    }\r\n\r\n    set[K: IsJsValue, V: IsJsValue](key: K, value: V): Unit {\r\n        // Special cased by the compiler\r\n        self.set(key, value)\r\n    }\r\n\r\n    increment[K: IsJsValue, V: IsJsValue](key: K, value: V): Unit {\r\n        // Special cased by the compiler\r\n        self.increment(key, value)\r\n    }\r\n        \r\n    decrement[K: IsJsValue, V: IsJsValue](key: K, value: V): Unit {\r\n        // Special cased by the compiler\r\n        self.decrement(key, value)\r\n    }\r\n\r\n    delete[K: IsJsValue](key: K): Unit {\r\n        // Special cased by the compiler\r\n        self.delete(key)\r\n    }\r\n\r\n    with[K: IsJsValue, V: IsJsValue](key: K, value: V): JsValue {\r\n        // Special cased by the compiler\r\n        self.with(key, value)\r\n    }\r\n\r\n    hasOwn(name: String): Bool {\r\n        Js->Object->prototype->hasOwnProperty->call(self, name)?\r\n    }\r\n\r\n\r\n    assign(source: JsValue, source2: JsValue = source): JsValue {\r\n        Js->Object->assign(self, source, if(source2 !== source) {source2} else {Js.null()})?\r\n    }\r\n\r\n\r\n    each(body: JsValue => Unit): Unit {\r\n        let iterator = self.call0(Js->Symbol->iterator)\r\n        mutable result = iterator->next()\r\n        while {!result->done?} {\r\n            body(result->value)\r\n            result = iterator->next()\r\n        }\r\n    }\r\n\r\n    eachWhile(body: JsValue => Bool): Unit {\r\n        let iterator = self.call0(Js->Symbol->iterator)\r\n        mutable result = iterator->next()\r\n        while {!result->done? && body(result->value)} {\r\n            result = iterator->next()\r\n        }\r\n    }\r\n\r\n    call[A0: IsJsValue](name: A0, arguments: List[JsValue]): JsValue {\r\n        self.get(name)->apply(self, arguments)\r\n    }\r\n\r\n    call0[A0: IsJsValue](name: A0): JsValue {\r\n        // Special cased by the compiler\r\n        self.call0(name)\r\n    }\r\n\r\n    call1[A0: IsJsValue, A1: IsJsValue](name: A0, a1: A1): JsValue {\r\n        // Special cased by the compiler\r\n        self.call1(name, a1)\r\n    }\r\n\r\n    call2[A0: IsJsValue, A1: IsJsValue, A2: IsJsValue](name: A0, a1: A1, a2: A2): JsValue {\r\n        // Special cased by the compiler\r\n        self.call2(name, a1, a2)\r\n    }\r\n\r\n    call3[A0: IsJsValue, A1: IsJsValue, A2: IsJsValue, A3: IsJsValue](name: A0, a1: A1, a2: A2, a3: A3): JsValue {\r\n        // Special cased by the compiler\r\n        self.call3(name, a1, a2, a3)\r\n    }\r\n\r\n    call4[A0: IsJsValue, A1: IsJsValue, A2: IsJsValue, A3: IsJsValue, A4: IsJsValue](name: A0, a1: A1, a2: A2, a3: A3, a4: A4): JsValue {\r\n        // Special cased by the compiler\r\n        self.call4(name, a1, a2, a3, a4)\r\n    }\r\n\r\n    call5[A0: IsJsValue, A1: IsJsValue, A2: IsJsValue, A3: IsJsValue, A4: IsJsValue, A5: IsJsValue](name: A0, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): JsValue {\r\n        // Special cased by the compiler\r\n        self.call5(name, a1, a2, a3, a4, a5)\r\n    }\r\n\r\n    call6[A0: IsJsValue, A1: IsJsValue, A2: IsJsValue, A3: IsJsValue, A4: IsJsValue, A5: IsJsValue, A6: IsJsValue](name: A0, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): JsValue {\r\n        // Special cased by the compiler\r\n        self.call6(name, a1, a2, a3, a4, a5, a6)\r\n    }\r\n\r\n    call7[A0: IsJsValue, A1: IsJsValue, A2: IsJsValue, A3: IsJsValue, A4: IsJsValue, A5: IsJsValue, A6: IsJsValue, A7: IsJsValue](name: A0, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): JsValue {\r\n        // Special cased by the compiler\r\n        self.call7(name, a1, a2, a3, a4, a5, a6, a7)\r\n    }\r\n\r\n    call8[A0: IsJsValue, A1: IsJsValue, A2: IsJsValue, A3: IsJsValue, A4: IsJsValue, A5: IsJsValue, A6: IsJsValue, A7: IsJsValue, A8: IsJsValue](name: A0, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): JsValue {\r\n        // Special cased by the compiler\r\n        self.call8(name, a1, a2, a3, a4, a5, a6, a7, a8)\r\n    }\r\n\r\n    call9[A0: IsJsValue, A1: IsJsValue, A2: IsJsValue, A3: IsJsValue, A4: IsJsValue, A5: IsJsValue, A6: IsJsValue, A7: IsJsValue, A8: IsJsValue, A9: IsJsValue](name: A0, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8, a9: A9): JsValue {\r\n        // Special cased by the compiler\r\n        self.call9(name, a1, a2, a3, a4, a5, a6, a7, a8, a9)\r\n    }\r\n\r\n    callValue(this: JsValue, arguments: List[JsValue]): JsValue {\r\n        self->apply(this, arguments)\r\n    }\r\n\r\n    callValue0(): JsValue {\r\n        // Special cased by the compiler\r\n        self.callValue0()\r\n    }\r\n\r\n    callValue1[A1: IsJsValue](a1: A1): JsValue {\r\n        // Special cased by the compiler\r\n        self.callValue1(a1)\r\n    }\r\n\r\n    callValue2[A1: IsJsValue, A2: IsJsValue](a1: A1, a2: A2): JsValue {\r\n        // Special cased by the compiler\r\n        self.callValue2(a1, a2)\r\n    }\r\n\r\n    callValue3[A1: IsJsValue, A2: IsJsValue, A3: IsJsValue](a1: A1, a2: A2, a3: A3): JsValue {\r\n        // Special cased by the compiler\r\n        self.callValue3(a1, a2, a3)\r\n    }\r\n\r\n    callValue4[A1: IsJsValue, A2: IsJsValue, A3: IsJsValue, A4: IsJsValue](a1: A1, a2: A2, a3: A3, a4: A4): JsValue {\r\n        // Special cased by the compiler\r\n        self.callValue4(a1, a2, a3, a4)\r\n    }\r\n\r\n    callValue5[A1: IsJsValue, A2: IsJsValue, A3: IsJsValue, A4: IsJsValue, A5: IsJsValue](a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): JsValue {\r\n        // Special cased by the compiler\r\n        self.callValue5(a1, a2, a3, a4, a5)\r\n    }\r\n\r\n    callValue6[A1: IsJsValue, A2: IsJsValue, A3: IsJsValue, A4: IsJsValue, A5: IsJsValue, A6: IsJsValue](a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): JsValue {\r\n        // Special cased by the compiler\r\n        self.callValue6(a1, a2, a3, a4, a5, a6)\r\n    }\r\n\r\n    callValue7[A1: IsJsValue, A2: IsJsValue, A3: IsJsValue, A4: IsJsValue, A5: IsJsValue, A6: IsJsValue, A7: IsJsValue](a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): JsValue {\r\n        // Special cased by the compiler\r\n        self.callValue7(a1, a2, a3, a4, a5, a6, a7)\r\n    }\r\n\r\n    callValue8[A1: IsJsValue, A2: IsJsValue, A3: IsJsValue, A4: IsJsValue, A5: IsJsValue, A6: IsJsValue, A7: IsJsValue, A8: IsJsValue](a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): JsValue {\r\n        // Special cased by the compiler\r\n        self.callValue8(a1, a2, a3, a4, a5, a6, a7, a8)\r\n    }\r\n\r\n    callValue9[A1: IsJsValue, A2: IsJsValue, A3: IsJsValue, A4: IsJsValue, A5: IsJsValue, A6: IsJsValue, A7: IsJsValue, A8: IsJsValue, A9: IsJsValue](a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8, a9: A9): JsValue {\r\n        // Special cased by the compiler\r\n        self.callValue9(a1, a2, a3, a4, a5, a6, a7, a8, a9)\r\n    }\r\n\r\n\r\n    new(arguments: List[JsValue]): JsValue {\r\n        Js->Function->prototype->bind->apply->(self, arguments)\r\n    }\r\n\r\n    new0(): JsValue {\r\n        // Special cased by the compiler\r\n        self->()\r\n    }\r\n\r\n    new1[A1: IsJsValue](a1: A1): JsValue {\r\n        // Special cased by the compiler\r\n        self->(a1)\r\n    }\r\n\r\n    new2[A1: IsJsValue, A2: IsJsValue](a1: A1, a2: A2): JsValue {\r\n        // Special cased by the compiler\r\n        self->(a1, a2)\r\n    }\r\n\r\n    new3[A1: IsJsValue, A2: IsJsValue, A3: IsJsValue](a1: A1, a2: A2, a3: A3): JsValue {\r\n        // Special cased by the compiler\r\n        self->(a1, a2, a3)\r\n    }\r\n\r\n    new4[A1: IsJsValue, A2: IsJsValue, A3: IsJsValue, A4: IsJsValue](a1: A1, a2: A2, a3: A3, a4: A4): JsValue {\r\n        // Special cased by the compiler\r\n        self->(a1, a2, a3, a4)\r\n    }\r\n\r\n    new5[A1: IsJsValue, A2: IsJsValue, A3: IsJsValue, A4: IsJsValue, A5: IsJsValue](a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): JsValue {\r\n        // Special cased by the compiler\r\n        self->(a1, a2, a3, a4, a5)\r\n    }\r\n\r\n    new6[A1: IsJsValue, A2: IsJsValue, A3: IsJsValue, A4: IsJsValue, A5: IsJsValue, A6: IsJsValue](a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): JsValue {\r\n        // Special cased by the compiler\r\n        self->(a1, a2, a3, a4, a5, a6)\r\n    }\r\n\r\n    new7[A1: IsJsValue, A2: IsJsValue, A3: IsJsValue, A4: IsJsValue, A5: IsJsValue, A6: IsJsValue, A7: IsJsValue](a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): JsValue {\r\n        // Special cased by the compiler\r\n        self->(a1, a2, a3, a4, a5, a6, a7)\r\n    }\r\n\r\n    new8[A1: IsJsValue, A2: IsJsValue, A3: IsJsValue, A4: IsJsValue, A5: IsJsValue, A6: IsJsValue, A7: IsJsValue, A8: IsJsValue](a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): JsValue {\r\n        // Special cased by the compiler\r\n        self->(a1, a2, a3, a4, a5, a6, a7, a8)\r\n    }\r\n\r\n    new9[A1: IsJsValue, A2: IsJsValue, A3: IsJsValue, A4: IsJsValue, A5: IsJsValue, A6: IsJsValue, A7: IsJsValue, A8: IsJsValue, A9: IsJsValue](a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8, a9: A9): JsValue {\r\n        // Special cased by the compiler\r\n        self->(a1, a2, a3, a4, a5, a6, a7, a8, a9)\r\n    }\r\n\r\n    new10[A1: IsJsValue, A2: IsJsValue, A3: IsJsValue, A4: IsJsValue, A5: IsJsValue, A6: IsJsValue, A7: IsJsValue, A8: IsJsValue, A9: IsJsValue, A10: IsJsValue](a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8, a9: A9, a10: A10): JsValue {\r\n        // Special cased by the compiler\r\n        self->(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10)\r\n    }\r\n\r\n\r\n    grabPairs(): List[Pair[String, JsValue]] {\r\n        if(!self.isObject()) {throw(GrabException)}\r\n        Js->Object->getOwnPropertyNames(self)->map(Js->{name, i => Pair(name, self.get(name))})?\r\n    }\r\n\r\n    grabMap(): Map[String, JsValue] {\r\n        self.grabPairs().toMap()\r\n    }\r\n\r\n    grabIntMap(): IntMap[JsValue] {\r\n        if(!self.instanceof(Js->Map)) {throw(GrabException)}\r\n        self?\r\n    }\r\n\r\n    grabStringMap(): StringMap[JsValue] {\r\n        if(!self.instanceof(Js->Map)) {throw(GrabException)}\r\n        self?\r\n    }\r\n        \r\n    spreadToArray(): List[JsValue] {\r\n        // Special cased by the compiler\r\n        self.spreadToArray()\r\n    }\r\n        \r\n    coalesce[T: IsJsValue](defaultValue: T): JsValue {\r\n        if(self.isNullOrUndefined()) {Js.value(defaultValue)} else {self}\r\n    }\r\n\r\n    typeof(): String {\r\n        // Special cased by the compiler\r\n        self.typeof()\r\n    }\r\n\r\n    instanceof(type: JsValue): Bool {\r\n        // Special cased by the compiler\r\n        self.instanceof(type)\r\n    }\r\n    \r\n    truthy(): Bool {\r\n        Js.unaryOperator(\"!!\", self)?\r\n    }\r\n    \r\n    falsy(): Bool {\r\n        Js.unaryOperator(\"!\", self)?\r\n    }\r\n    \r\n    nullish(): Bool {\r\n        self.isNullOrUndefined() // TODO: Rename\r\n    }\r\n\r\n    //toList(): List[JsValue] // TODO\r\n    // TODO: JS operators\r\n\r\n}\r\n\r\ntrait T: IsJsValue {}\r\ninstance JsValue: IsJsValue {}\r\ninstance String: IsJsValue {}\r\ninstance Char: IsJsValue {}\r\ninstance Int: IsJsValue {}\r\ninstance Float: IsJsValue {}\r\ninstance Bool: IsJsValue {}\r\ninstance List[T: IsJsValue]: IsJsValue {}\r\ninstance IntMap[T: IsJsValue]: IsJsValue {}\r\ninstance StringMap[T: IsJsValue]: IsJsValue {}\r\ninstance Error: IsJsValue {}\r\ninstance Date: IsJsValue {}\r\ninstance Duration: IsJsValue {}\r\ninstance Buffer: IsJsValue {}\r\ninstance Nothing: IsJsValue {}\r\n"
    ],
    "names": [
        "grabString",
        "self",
        "isString",
        "throw",
        "GrabException",
        "grabChar",
        "isChar",
        "grabInt",
        "isInt",
        "grabFloat",
        "isFloat",
        "grabBool",
        "isBool",
        "grabArray",
        "isArray",
        "grabBuffer",
        "isBuffer",
        "grabJson",
        "equals",
        "value",
        "notEquals",
        "\"Number\"",
        "isInteger",
        "notAfter",
        "\"Math\"",
        "abs",
        "\"Array\"",
        "isObject",
        "isNull",
        "isFunction",
        "\"DataView\"",
        "isUndefined",
        "isNullOrUndefined",
        "isNan",
        "isFinite",
        "\"isFinite\"",
        "get",
        "key",
        "getOwn",
        "hasOwn",
        "Some",
        "None",
        "set",
        "increment",
        "decrement",
        "delete",
        "with",
        "name",
        "\"Object\"",
        "prototype",
        "hasOwnProperty",
        "call",
        "assign",
        "source",
        "source2",
        "each",
        "body",
        "iterator",
        "\"Symbol\"",
        "result",
        "next",
        "done",
        "eachWhile",
        "arguments",
        "apply",
        "call0",
        "call1",
        "a1",
        "call2",
        "a2",
        "call3",
        "a3",
        "call4",
        "a4",
        "call5",
        "a5",
        "call6",
        "a6",
        "call7",
        "a7",
        "call8",
        "a8",
        "call9",
        "a9",
        "callValue",
        "this",
        "callValue0",
        "callValue1",
        "callValue2",
        "callValue3",
        "callValue4",
        "callValue5",
        "callValue6",
        "callValue7",
        "callValue8",
        "callValue9",
        "new",
        "\"Function\"",
        "bind",
        "new0",
        "new1",
        "new2",
        "new3",
        "new4",
        "new5",
        "new6",
        "new7",
        "new8",
        "new9",
        "new10",
        "a10",
        "grabPairs",
        "getOwnPropertyNames",
        "map",
        "i",
        "Pair",
        "grabMap",
        "toMap",
        "grabIntMap",
        "\"Map\"",
        "grabStringMap",
        "spreadToArray",
        "coalesce",
        "defaultValue",
        "typeof",
        "instanceof",
        "type",
        "truthy",
        "falsy",
        "nullish",
        "JsValue",
        "String",
        "Char",
        "Int",
        "Float",
        "Bool",
        "List",
        "IntMap",
        "StringMap",
        "Error",
        "Date",
        "Duration",
        "Buffer",
        "Nothing"
    ],
    "mappings": ""
}