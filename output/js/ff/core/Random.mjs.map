{
    "version": 3,
    "sources": [
        "../../../../core/Random.ff"
    ],
    "sourcesContent": [
        "class Random(\n    mutable s0: Float\n    mutable s1: Float\n    mutable s2: Float\n    mutable c: Float\n    mutable spareGauss: Float\n)\n\n// Using Alea PRNG by Johannes Baag√∏e <baagoe@baagoe.com>, 2010\n// Typical use: Random.seedInstant(system.task().now())\n\nnewFromInt(seed: Int): Random {\n    newFromFloat(seed.toFloat())\n}\n\nnewFromFloat(seed: Float): Random {\n    let buffer = Buffer.new(8)\n    buffer.setFloat64(0, seed)\n    newFromBuffer(buffer)\n}\n\nnewFromBuffer(buffer: Buffer): Random {\n    mutable n: Float = (0xefc8249d).toFloat()\n    function mash(data: Buffer): Float {\n        0.until(data.size()).each {i =>\n            n += data.grabUint8(i).toFloat()\n            mutable h = 0.02519603282416938 * n\n            n = Js.binaryOperator(\">>>\", h, 0)?\n            h -= n\n            h *= n\n            n = Js.binaryOperator(\">>>\", h, 0)?\n            h -=n\n            n += h * 0x100000000 // 2^32\n        }\n        Js.binaryOperator(\">>>\", n, 0)? * 2.3283064365386963e-10\n    }\n    let space: Buffer = Js->DataView->(Js->Uint8Array->([32])->buffer)?\n    let r = Random(\n        s0 = mash(space)\n        s1 = mash(space)\n        s2 = mash(space)\n        c = 1.0\n        spareGauss = Float.nan()\n    )\n    r.s0 -= mash(buffer)\n    if(r.s0 < 0.0) {r.s0 += 1.0}\n    r.s1 -= mash(buffer);\n    if(r.s1 < 0.0) {r.s1 +=1.0}\n    r.s2 -= mash(buffer);\n    if(r.s2 < 0.0) {r.s2 += 1.0}\n    r\n}\n\nextend self: Random {\n    \n    copy(): Random {\n        self.Random()\n    }\n\n    nextInt(from: Int, until: Int): Int {\n        Js.binaryOperator(\"|\", self.nextFloat(from.toFloat(), until.toFloat())!, 0)?\n    }\n\n    nextFloat(from: Float, until: Float): Float {\n        let t = 2091639 * self.s0 + self.c * 2.3283064365386963e-10\n        self.s0 = self.s1;\n        self.s1 = self.s2;\n        self.c = Js.binaryOperator(\"|\", t, 0)?\n        let uniform = t - self.c\n        self.s2 = uniform\n        from + uniform * (until - from)\n    }\n        \n    nextBool(): Bool {\n        self.nextInt(0, 2) == 0\n    }\n\n    nextBytes(buffer: Buffer, start: Int, stop: Int): Unit {\n        start.until(stop).each {i =>\n            buffer.setUint8(i, self.nextInt(0, 256))\n        }\n    }\n\n    nextGauss(mean: Float, standardDeviation: Float): Float {\n        if(!self.spareGauss.isNan()) {\n            let result = self.spareGauss * standardDeviation + mean\n            self.spareGauss = Float.nan()\n            result\n        } else {\n            mutable u = 0.5\n            mutable v = 0.5\n            mutable s = 0.5\n            doWhile {\n                u = self.nextFloat(0.0, 1.0) * 2 - 1\n                v = self.nextFloat(0.0, 1.0) * 2 - 1\n                s = u * u + v * v\n                s >= 1.0 || s == 0.0\n            }\n            s = (-2.0 * s.ln() / s).sqrt()\n            self.spareGauss = v * s\n            mean + standardDeviation * u * s\n        }\n    }\n\n    shuffleArray[T](array: Array[T]): Unit {\n        0.until(array.size() - 1).each {i =>\n            let j = self.nextInt(0, array.size() - i) + i\n            let value = array.grab(i)\n            array.set(i, array.grab(j))\n            array.set(j, value)\n        }\n    }\n    \n    shuffleList[T](list: List[T]): List[T] {\n        let array = list.toArray()\n        self.shuffleArray(list.toArray())\n        array.drain()\n    }\n\n    sampleArray[T](count: Int, array: Array[T], body: T => Unit): Unit {\n        self.shuffleList(array.toList()).takeFirst(count).each {body(_)}\n    }\n\n    sampleList[T](count: Int, list: List[T]): List[T] {\n        self.shuffleList(list).takeFirst(count)\n    }\n\n    grabArray[T](array: Array[T]): T {\n        array.grab(self.nextInt(0, array.size()))\n    }\n\n    grabList[T](list: List[T]): T {\n        list.grab(self.nextInt(0, list.size()))\n    }\n    \n}\n"
    ],
    "names": [
        "Random",
        "s0",
        "s1",
        "s2",
        "c",
        "spareGauss",
        "newFromInt",
        "seed",
        "newFromFloat",
        "toFloat",
        "buffer",
        "new",
        "setFloat64",
        "newFromBuffer",
        "n",
        "mash",
        "data",
        "size",
        "i",
        "grabUint8",
        "h",
        "space",
        "\"DataView\"",
        "\"Uint8Array\"",
        "r",
        "nan",
        "copy",
        "self",
        "nextInt",
        "from",
        "until",
        "nextFloat",
        "t",
        "uniform",
        "nextBool",
        "nextBytes",
        "start",
        "stop",
        "setUint8",
        "nextGauss",
        "mean",
        "standardDeviation",
        "isNan",
        "result",
        "u",
        "v",
        "s",
        "sqrt",
        "ln",
        "shuffleArray",
        "array",
        "j",
        "value",
        "set",
        "shuffleList",
        "list",
        "toArray",
        "drain",
        "sampleArray",
        "count",
        "body",
        "toList",
        "sampleList",
        "takeFirst",
        "grabArray",
        "grab",
        "grabList"
    ],
    "mappings": "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"
}