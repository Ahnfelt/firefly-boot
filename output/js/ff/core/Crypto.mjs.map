{
    "version": 3,
    "sources": [
        "../../../../core/Crypto.ff"
    ],
    "sourcesContent": [
        "capability Crypto {}\n\nextend self: Crypto {\n    \n    randomUuid(): String {\n        self!->randomUUID()?\n    }\n    \n    randomBuffer(size: Int): Buffer {\n        let buffer = Buffer.new(size)\n        self.randomizeBuffer(buffer)\n        buffer\n    }\n\n    randomizeBuffer(buffer: Buffer): Unit {\n        self!->getRandomValues(Js->Uint8Array->(buffer!->buffer, buffer!->byteOffset, buffer!->byteLength))\n    }\n\n    hmacSha256(key: Buffer, buffer: Buffer): Buffer {\n        Js.throwIfCancelled()\n        let cryptoKey = Js.await(self!->subtle->importKey(\n            \"raw\"\n            key!\n            Js->(name = \"HMAC\", hash = Js->(name = \"SHA-256\"))\n            False\n            [\"sign\"]\n        ))\n        let signature = Js.await(self!->subtle->sign(\n            \"HMAC\"\n            cryptoKey\n            buffer!\n        )) \n        Js->DataView->(signature)?\n    }\n        \n    sha256(buffer: Buffer): Buffer {\n        Js.throwIfCancelled()\n        let hash = Js.await(self!->subtle->digest(\"SHA-256\", buffer))\n        Js->DataView->(hash)?\n    }\n\n    hashPassword(password: String, iterations: Int = 600000): String {\n        let salt = self.randomBuffer(16)\n        let hash = internalHashPassword(self, salt, password.toBuffer(), iterations)\n        \"$pbkdf2-sha256-hex$\" + iterations + \"$\" + salt.toHex() + \"$\" + hash.toHex()\n    }\n    \n    checkPassword(password: String, passwordHash: String): Bool {\n        passwordHash.split('$').{\n            | [\"\", \"pbkdf2-sha256-hex\", iterationsText, saltText, hashText] {\n                iterationsText.getInt() | Some(iterations)\n            } =>\n                let computedHash = \n                    internalHashPassword(self, Buffer.fromHex(saltText), password.toBuffer(), iterations)\n                let hash = Buffer.fromHex(hashText)\n                self.constantTimeEquals(computedHash, hash)\n            | _ => False\n        }\n    }\n\n    constantTimeEquals(buffer1: Buffer, buffer2: Buffer): Bool {\n        if(buffer1.size() != buffer2.size()) {False} else: \n        mutable v = 0\n        mutable i = 0\n        while {i < buffer1.size()} {\n            v = v.bitOr(buffer1.grabUint8(i).bitXor(buffer2.grabUint8(i)))\n            i += 1\n        }\n        v == 0\n    }\n\n}\n\ninternalHashPassword(system: Crypto, salt: Buffer, password: Buffer, iterations: Int): Buffer {\n    Js.throwIfCancelled()\n    let keyMaterial = Js.await(system!->subtle->importKey(\n        \"raw\"\n        password!\n        Js->(name = \"PBKDF2\")\n        False\n        [\"deriveBits\"]\n    ))\n    let hashBuffer = Js.await(system!->subtle->deriveBits(\n        Js->(\n            name = \"PBKDF2\"\n            salt = salt\n            iterations = iterations\n            hash = \"SHA-256\"\n        )\n        keyMaterial\n        256\n    ))\n    Js->DataView->(hashBuffer)?\n}\n"
    ],
    "names": [
        "internalHashPassword",
        "system",
        "salt",
        "password",
        "iterations",
        "keyMaterial",
        "subtle",
        "importKey",
        "name",
        "hashBuffer",
        "deriveBits",
        "hash",
        "\"DataView\"",
        "randomUuid",
        "self",
        "randomUUID",
        "randomBuffer",
        "size",
        "buffer",
        "new",
        "randomizeBuffer",
        "getRandomValues",
        "\"Uint8Array\"",
        "byteOffset",
        "byteLength",
        "hmacSha256",
        "key",
        "cryptoKey",
        "signature",
        "sign",
        "sha256",
        "digest",
        "hashPassword",
        "toBuffer",
        "toHex",
        "checkPassword",
        "passwordHash",
        "split",
        "iterationsText",
        "saltText",
        "hashText",
        "getInt",
        "Some",
        "computedHash",
        "fromHex",
        "constantTimeEquals",
        "buffer1",
        "buffer2",
        "v",
        "i",
        "bitOr",
        "bitXor",
        "grabUint8"
    ],
    "mappings": "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"
}