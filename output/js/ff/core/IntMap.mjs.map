{
    "version": 3,
    "sources": [
        "../../../../../core/IntMap.ff"
    ],
    "sourcesContent": [
        "class IntMap[V] {}\r\n\r\nnew[V](): IntMap[V] {\r\n    Js->Map->()?\r\n}\r\n    \r\nextend self[V]: IntMap[V] {\r\n\r\n    get(key: Int): Option[V] {\r\n        let result = self!->get(key)\r\n        if(!result.isUndefined() || self!->has(key)?) {result?}\r\n    }\r\n\r\n    grab(key: Int): V {\r\n        let result = self!->get(key)\r\n        if(result.isUndefined() && !self.has(key)) {throw(GrabException())}\r\n        result?\r\n    }\r\n        \r\n    set(key: Int, value: V): Unit {\r\n        self!->set(key, value!)\r\n    }\r\n\r\n    has(key: Int): Bool {\r\n        self!->has(key)?\r\n    }\r\n\r\n    remove(key: Int): Bool {\r\n        self!->delete(key)?\r\n    }\r\n\r\n    clear(): Unit {\r\n        self!->clear()\r\n    }\r\n\r\n    size(): Int {\r\n        self!->size?\r\n    }\r\n    \r\n    isEmpty(): Bool {\r\n        self.size() == 0\r\n    }\r\n\r\n    each(body: (Int, V) => Unit): Unit {\r\n        if(Js.inAsync()) {\r\n            let iterator = self!->entries()\r\n            mutable result = iterator->next()\r\n            while {!result->done?} {\r\n                let value = result->value\r\n                body(value.get(0)?, value.get(1)?)\r\n                result = iterator->next()\r\n            }\r\n        } else {\r\n            self!->forEach(Js->{v, k => body(k?, v?)})\r\n        }\r\n    }\r\n    \r\n    eachWhile(body: (Int, V) => Bool): Unit {\r\n        self!.eachWhile {value =>\r\n            body(value.get(0)?, value.get(1)?)\r\n        }\r\n    }\r\n            \r\n    toArray(): Array[Pair[Int, V]] {\r\n        let array = Array.new()\r\n        self.each {k, v => array.push(Pair(k, v))}\r\n        array\r\n    }\r\n\r\n    toList(): List[Pair[Int, V]] {\r\n        self.toArray().drain()\r\n    }\r\n\r\n    toStream(): Stream[Pair[Int, V]] {\r\n        self.toList().toStream()\r\n    }\r\n\r\n    toMap(): Map[Int, V] {\r\n        self.toList().toMap()\r\n    }\r\n\r\n    keys(): List[Int] {\r\n        let array = Array.new()\r\n        self.each {k, v => array.push(k)}\r\n        array.drain()\r\n    }\r\n\r\n    values(): List[V] {\r\n        let array = Array.new()\r\n        self.each {k, v => array.push(v)}\r\n        array.drain()\r\n    }\r\n\r\n    copy(): IntMap[V] {\r\n        Js->Map->(self!)?\r\n    }\r\n\r\n    getOrSet(key: Int, body: () => V): V {\r\n        if(!self.has(key)) {self.set(key, body())}\r\n        self.grab(key)\r\n    }\r\n            \r\n}\r\n\r\nextend self[V]: IntMap[Array[V]] {\r\n\r\n    push(key: Int, value: V) {\r\n        self.get(key).{\r\n            | None => self.set(key, [value].toArray())\r\n            | Some(array) => array.push(value)\r\n        }\r\n    }\r\n\r\n}\r\n"
    ],
    "names": [
        "new",
        "\"Map\"",
        "get",
        "self",
        "key",
        "result",
        "isUndefined",
        "has",
        "grab",
        "throw",
        "GrabException",
        "set",
        "value",
        "remove",
        "delete",
        "clear",
        "size",
        "isEmpty",
        "each",
        "body",
        "iterator",
        "entries",
        "next",
        "done",
        "forEach",
        "v",
        "k",
        "eachWhile",
        "toArray",
        "array",
        "Pair",
        "toList",
        "drain",
        "toStream",
        "toMap",
        "keys",
        "values",
        "copy",
        "getOrSet",
        "push",
        "None"
    ],
    "mappings": "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"
}