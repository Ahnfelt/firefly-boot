{
    "version": 3,
    "sources": [
        "../../../../../core/FileHandle.ff"
    ],
    "sourcesContent": [
        "capability FileHandle {}\r\n\r\nextend self: FileHandle {\r\n\r\n    close(): Unit {\r\n        Js.await(self!->close())\r\n    }\r\n\r\n    read(buffer: Buffer, offset: Int = 0, length: Option[Int] = None, position: Option[Int] = None): Unit {\r\n        Js.throwIfCancelled()\r\n        Js.await(self!->read(buffer, Js->(\r\n            offset = offset\r\n            length = length.map {_!}.else {Js.undefined()}\r\n            position = position.map {_!}.else {Js.undefined()}\r\n        )))\r\n    }\r\n\r\n    write(buffer: Buffer, offset: Int = 0, length: Option[Int] = None, position: Option[Int] = None): Unit {\r\n        Js.throwIfCancelled()\r\n        Js.await(self!->write(\r\n            buffer\r\n            offset\r\n            length.map {_!}.else {Js.undefined()}\r\n            position.map {_!}.else {Js.undefined()}\r\n        ))\r\n    }\r\n    \r\n    writeText(text: String, position: Option[Int] = None, encoding: String = \"utf8\"): Unit {\r\n        Js.throwIfCancelled()\r\n        Js.await(self!->write(\r\n            text\r\n            position.map {_!}.else {Js.undefined()}\r\n            encoding\r\n        ))\r\n    }\r\n        \r\n    writeLine(text: String, position: Option[Int] = None, encoding: String = \"utf8\"): Unit {\r\n        self.writeText(text + \"\\n\", position, encoding)\r\n    }\r\n        \r\n    truncate(length: Int = 0): Unit {\r\n        Js.throwIfCancelled()\r\n        Js.await(self!->truncate(length))\r\n    }\r\n    \r\n    sync(dataOnly: Bool = False): Unit {\r\n        Js.throwIfCancelled()\r\n        if(dataOnly) {\r\n            Js.await(self!->datasync())\r\n        } else {\r\n            Js.await(self!->sync())\r\n        }\r\n    }\r\n\r\n}\r\n"
    ],
    "names": [
        "close",
        "self",
        "read",
        "buffer",
        "offset",
        "length",
        "None",
        "position",
        "else",
        "map",
        "w1",
        "write",
        "writeText",
        "text",
        "encoding",
        "writeLine",
        "truncate",
        "sync",
        "dataOnly",
        "datasync"
    ],
    "mappings": "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"
}