{
    "version": 3,
    "sources": [
        "../../../../../compiler/Main.ff"
    ],
    "sourcesContent": [
        "import Tokenizer\r\nimport Parser\r\nimport Syntax\r\nimport Resolver\r\nimport Compiler\r\nimport Unification\r\nimport Builder\r\nimport Dependencies\r\nimport JsEmitter\r\nimport Inference\r\nimport ModuleCache\r\nimport LspHook\r\nimport DependencyLock\r\n\r\ndata MainCommand {\r\n    BootstrapCommand\r\n    RunCommand(mainPath: String, argument: List[String])\r\n    BrowserCommand(mainPath: String)\r\n    BuildCommand(mainPath: String)\r\n    CheckCommand(filePath: String)\r\n    SymbolsCommand(outPath: String, filePaths: List[String])\r\n}\r\n\r\ndata CommandLineError(problem: String)\r\n\r\nmain(system: NodeSystem): Unit {\r\n\r\n    let fireflyPath = detectFireflyPath(system)\r\n\r\n    function buildScript(\r\n        mainPath: Path\r\n        mainPackagePair: PackagePair\r\n        emitTarget: EmitTarget\r\n        resolvedDependencies: ResolvedDependencies\r\n    ): ModuleKey {\r\n        let fixedPackagePaths = if(resolvedDependencies.packagePaths.contains(PackagePair(\"ff\", \"core\"))) {\r\n            resolvedDependencies.packagePaths\r\n        } else {\r\n            resolvedDependencies.packagePaths.add(PackagePair(\"ff\", \"core\"), fireflyPath.slash(\"core\"))\r\n        }\r\n        let compilerModulePath = if(emitTarget != EmitBrowser && emitTarget != EmitExecutable) {\r\n            fireflyPath.slash(\"output\").slash(\"js\").slash(\"ff\").slash(\"compiler/Builder.mjs\")\r\n        }\r\n        let targetName = emitTarget.{\r\n            | EmitBuild => \"build\"\r\n            | EmitNode => \"node\"\r\n            | EmitBrowser => \"browser\"\r\n            | EmitExecutable => \"executable\"\r\n        }\r\n        let folders = mainPath.parent().grab().relativeListTo(fixedPackagePaths.grab(mainPackagePair))\r\n        let name = mainPath.base().removeLast(\".ff\").grab()\r\n        let moduleKey = ModuleKey(mainPackagePair, folders, name)\r\n        Builder.build(\r\n            system = system\r\n            emitTarget = emitTarget\r\n            mainModules = [moduleKey]\r\n            resolvedDependencies = resolvedDependencies.ResolvedDependencies(packagePaths = fixedPackagePaths)\r\n            compilerModulePath = compilerModulePath\r\n            tempPath = system.path(\".firefly\").slash(\"temporary\")\r\n            jsOutputPath = system.path(\".firefly\").path(\"output\").path(targetName)\r\n            printMeasurements = False\r\n            moduleCache = ModuleCache.new(0)\r\n        )\r\n        moduleKey\r\n    }\r\n\r\n    function runCommand(command: MainCommand) {\r\n        | RunCommand(mainFile, arguments) =>\r\n            let resolvedDependencies = Dependencies.process(\r\n                system.httpClient()\r\n                DependencyLock.new(system.mainTask())\r\n                system.path(mainFile)\r\n            )\r\n            prepareFireflyDirectory(system.path(\".\"))\r\n            let mainPath = system.path(mainFile)\r\n            let moduleKey = buildScript(mainPath, resolvedDependencies.mainPackagePair, EmitNode, resolvedDependencies)\r\n            if(!importAndRun(system, fireflyPath, \"node\", moduleKey, arguments)) {\r\n                let at = Location(system.path(mainFile).absolute(), 1, 1)\r\n                throw(CompileError(at, \"This module does not contain a 'nodeMain' function\"))\r\n            }\r\n\r\n        | BrowserCommand(mainFile) =>\r\n            let resolvedDependencies = Dependencies.process(\r\n                system.httpClient()\r\n                DependencyLock.new(system.mainTask())\r\n                system.path(mainFile)\r\n            )\r\n            prepareFireflyDirectory(system.path(\".\"))\r\n            let mainPath = system.path(mainFile)\r\n            let moduleKey = \r\n                buildScript(mainPath, resolvedDependencies.mainPackagePair, EmitBrowser, resolvedDependencies)\r\n            bundleForBrowser(system, resolvedDependencies.mainPackagePair, moduleKey)\r\n\r\n        | BuildCommand(mainFile) =>\r\n            let resolvedDependencies = Dependencies.process(\r\n                system.httpClient()\r\n                DependencyLock.new(system.mainTask())\r\n                system.path(mainFile + \".ff\")\r\n            )\r\n            prepareFireflyDirectory(system.path(\".\"))\r\n            let mainPath = system.path(mainFile)\r\n            let moduleKey = buildScript(mainPath, resolvedDependencies.mainPackagePair, EmitBuild, resolvedDependencies)\r\n            buildScript(mainPath, resolvedDependencies.mainPackagePair, EmitExecutable, resolvedDependencies)\r\n            bundleForPkg(system, resolvedDependencies.mainPackagePair, mainPath.base())\r\n            importAndRun(system, fireflyPath, \"build\", moduleKey, [])\r\n\r\n        | CheckCommand(filePath) => \r\n            let errors = Builder.check(\r\n                system = system\r\n                fireflyPath = fireflyPath\r\n                path = system.path(filePath)\r\n                mustContain = None\r\n                skipFiles = Set.new()\r\n                virtualFiles = Map.new()\r\n                cache = ModuleCache.new(1)\r\n                dependencyLock = DependencyLock.new(system.mainTask())\r\n                newVersion = 0\r\n                lspHook = LspHook.disabled() \r\n                infer = True\r\n            )\r\n            if(!errors.isEmpty()) {throw(CompileErrors(errors.distinct()))}\r\n\r\n        | BootstrapCommand =>\r\n            let workingDirectory = system.path(\".\")\r\n            let fakeLocation = Location(\"<core>\", 0, 0)\r\n            Builder.build(\r\n                system = system\r\n                emitTarget = EmitNode\r\n                mainModules = [ModuleKey(PackagePair(\"ff\", \"compiler\"), [], \"Main\")]\r\n                resolvedDependencies = ResolvedDependencies(\r\n                    mainPackagePair = PackagePair(\"ff\", \"compiler\")\r\n                    packages = [Pair(\r\n                        PackagePair(\"ff\", \"core\"), PackageInfo(DPackage(\r\n                            fakeLocation, PackagePair(\"ff\", \"core\"), Version(fakeLocation, 0, 0, 0), TargetNames(True, False)\r\n                        ), [], [DInclude(fakeLocation, \"node_modules\")])\r\n                    )].toMap() // Only used for includes currently\r\n                    packagePaths = [\r\n                        Pair(PackagePair(\"ff\", \"compiler\"), workingDirectory.slash(\"compiler\"))\r\n                        Pair(PackagePair(\"ff\", \"core\"), workingDirectory.slash(\"core\"))\r\n                    ].toMap()\r\n                    singleFilePackages = [].toSet()\r\n                )\r\n                compilerModulePath = None\r\n                tempPath = workingDirectory.slash(\"output\").slash(\"temporary\")\r\n                jsOutputPath = workingDirectory.slash(\"output\").slash(\"js\")\r\n                printMeasurements = True\r\n                moduleCache = ModuleCache.new(0)\r\n            )\r\n            \r\n        | SymbolsCommand(outPath, filePaths) =>\r\n            let columns = filePaths.flatMap {filePath =>\r\n                let path = system.path(filePath)\r\n                let code = path.readText()\r\n                let packagePair = Syntax.scriptPackagePair\r\n                let moduleKey = ModuleKey(packagePair, [], path.base().removeLast(\".ff\").grab())\r\n                let tokens = Tokenizer.tokenize(path.absolute(), code, None, False)\r\n                let parser = Parser.new(moduleKey, tokens, True, LspHook.disabled())\r\n                let module = parser.parseModuleWithPackageInfo().module\r\n                makeSymbolColumns(module)\r\n            }\r\n            let rowCount = columns.sortBy {_.size()}.last().map {_.size()}.else {0}\r\n            let tsv = 0.until(rowCount).map {i => columns.map {_.get(i).else {\"\"}}}\r\n            system.path(outPath).writeText(tsv.map {_.join(\"\\t\")}.join(\"\\n\") + \"\\n\")\r\n            \r\n    }\r\n\r\n    try {\r\n        let command = parseCommandLine(system.arguments())\r\n        runCommand(command)\r\n    } tryCatch {| CommandLineError(message), _ =>\r\n        Log.debug(message)\r\n    } tryCatch {| CompileError(at, message), _ =>\r\n        Log.debug(message)\r\n        Log.debug(\" at \" + at.file.replace(\"./\", \"\") + \":\" + at.line + \":\" + at.column)\r\n    } catch {| CompileErrors(errors), _ =>\r\n        errors.map {| CompileError(at, message) => \r\n            Log.debug(message)\r\n            Log.debug(\" at \" + at.file.replace(\"./\", \"\") + \":\" + at.line + \":\" + at.column)\r\n        }\r\n    }\r\n}\r\n\r\nusageString = \"\"\"\r\nusage: firefly <main-file> [<main-arguments>] | <command> [<command-arguments>]\r\n\r\nThese are the commands:\r\n   run <main-file> [<main-arguments>]    Run the main file with the provided arguments\r\n   browser <main-file>                   Compile the main file for the browser\r\n   build <main-file>                     Build the main file\r\n   check <firefly-file>                  Check the firefly source file for errors\r\n   symbols <out-file> <firefly-file>     Print a .tsv with the symbols of a firefly source file\r\n   bootstrap                             Bootstrap the compiler\r\n\"\"\"\r\n\r\nparseCommandLine(arguments: List[String]): MainCommand {\r\n    | [mainFile, ...mainArguments] {mainFile.removeLast(\".ff\") | Some(mainName)} =>\r\n        RunCommand(mainFile, mainArguments)\r\n    | [\"run\", ...runArguments] =>\r\n        runArguments.{\r\n            | [mainFile, ...mainArguments] {mainFile.removeLast(\".ff\") | Some(mainName)} =>\r\n                RunCommand(mainFile, mainArguments)\r\n            | _ => throw(CommandLineError(\r\n                \"You must specify a Firefly file (.ff) as first argument to run.\" + usageString\r\n            ))\r\n        }\r\n    | [\"browser\", ...browserArguments] =>\r\n        browserArguments.{\r\n            | [mainFile] {mainFile.removeLast(\".ff\") | Some(mainName)} =>\r\n                BrowserCommand(mainFile)\r\n            | [_, _, ...] => throw(CommandLineError(\r\n                \"You must only specify a single argument to browser.\" + usageString\r\n            ))\r\n            | _ => throw(CommandLineError(\r\n                \"You must specify a Firefly file (.ff) as the argument to browser.\" + usageString\r\n            ))\r\n        }\r\n    | [\"build\", ...buildArguments] =>\r\n        buildArguments.{\r\n            | [mainFile] {mainFile.removeLast(\".ff\") | Some(mainName)} =>\r\n                BuildCommand(mainFile)\r\n            | [_, _, ...] => throw(CommandLineError(\r\n                \"You must only specify a single argument to build.\" + usageString\r\n            ))\r\n            | _ => throw(CommandLineError(\r\n                \"You must specify a Firefly file (.ff) as the argument to build.\" + usageString\r\n            ))\r\n        }\r\n    | [\"check\", ...checkArguments] =>\r\n        checkArguments.{\r\n            | [fileName] =>\r\n                CheckCommand(fileName)\r\n            | [_, _, ...] => throw(CommandLineError(\r\n                \"You must only specify a single argument to check.\" + usageString\r\n            ))\r\n            | [] => throw(CommandLineError(\r\n                \"You must specify a Firefly file (.ff) or directory as the argument to check.\" + usageString\r\n            ))\r\n        }\r\n    | [\"symbols\", ...checkArguments] =>\r\n        checkArguments.{\r\n            | [outName, fileName, ...fileNames] {outName.endsWith(\".tsv\")} =>\r\n                SymbolsCommand(outName, [fileName, ...fileNames])\r\n            | _ => throw(CommandLineError(\r\n                \"You must specify a output file (.tsv) and 1+ Firefly files (.ff) to symbols.\" + usageString\r\n            ))\r\n        }\r\n    | [\"bootstrap\", _] =>\r\n        throw(CommandLineError(\"bootstrap takes no arguments\" + usageString))\r\n    | [\"bootstrap\"] => BootstrapCommand\r\n    | [] => throw(CommandLineError(\"You must specify a command or a main file to run.\" + usageString))\r\n    | [s, ...] => throw(CommandLineError(\"Unknown command '\" + s + \"'\" + usageString))\r\n}\r\n\r\nbundleForPkg(system: NodeSystem, packagePair: PackagePair, mainFile: String) {\r\n    let prefix = \".firefly/output/executable/\"\r\n    let mainJsFile = prefix + packagePair.groupName(\"/\") + \"/\" + mainFile + \".mjs\"\r\n    let file = prefix + \"Main.bundle.js\"\r\n    BuildSystem.internalNodeCallEsBuild(system, mainJsFile, outputPath = file, minify = False)\r\n}\r\n\r\nbundleForBrowser(system: NodeSystem, packagePair: PackagePair, moduleKey: ModuleKey) {\r\n    let packagePath = moduleKey.packagePair.groupName(\"/\")\r\n    let outputPath = system.path(\".firefly/output/browser/\" + packagePath + \"/\")\r\n    let runFile = outputPath.slash(moduleKey.importName() + \".run.mjs\")\r\n    BuildSystem.internalBrowserCallEsBuild(\r\n        system!? \r\n        [runFile.absolute()]\r\n        outputPath.absolute()\r\n        minify = True\r\n        sourceMap = True\r\n    )\r\n}\r\n\r\nimportAndRun(\r\n    system: NodeSystem\r\n    fireflyPath: Path\r\n    target: String\r\n    moduleKey: ModuleKey\r\n    arguments: List[String]\r\n): Bool {\r\n    let process = Js.await(Js.dynamicImport(\"process\"))\r\n    let cwd = process->cwd()\r\n    let workingDirectory = if(cwd->indexOf(\":\") === 1) {\"file:///\" + cwd?} else {cwd?}\r\n    let packagePath = moduleKey.packagePair.groupName(\"/\")\r\n    let runFile = workingDirectory + \"/.firefly/output/\" + target + \"/\" + packagePath + \"/\" + moduleKey.importName() + \".run.mjs\"\r\n    let runFilePath = if(runFile.contains(\"://\")) {system.pathFromUrl(runFile)} else {system.path(runFile)}\r\n    if(runFilePath.exists()) {\r\n        let main = Js.await(Js.dynamicImport(runFile))\r\n        main->\"$run$\"(fireflyPath.absolutePath, arguments)\r\n        True\r\n    } else {\r\n        False\r\n    }\r\n}\r\n\r\nprepareFireflyDirectory(path: Path) {\r\n    if(!path.slash(\".firefly\").slash(\"output\").exists()) {\r\n        if(!path.slash(\".firefly\").exists()) {\r\n            path.slash(\".firefly\").createDirectory()\r\n        }\r\n        path.slash(\".firefly\").slash(\"output\").createDirectory()\r\n    }\r\n}\r\n\r\ndetectFireflyPath(system: NodeSystem): Path {\r\n    let url = Js.import(\"url\")\r\n    let suffix = \"/output/js/ff/compiler/Main.mjs\"\r\n    let moduleUrl = Js->import->meta->url\r\n    if(!Js->import->meta->url->endsWith(suffix)?) {\r\n        Js.throw(Js->Error->(\"Expected module path to end with: \" + suffix + \", but got: \" + moduleUrl?))\r\n    } else {\r\n        Path(url->fileURLToPath(Js->URL->(moduleUrl->slice(0, -suffix.size())))?)\r\n    }\r\n}\r\n\r\nmakeSymbolColumns(module: Module): List[List[String]] {\r\n    function processSignature(signature: Signature): String {\r\n        let generics = if(signature.generics.isEmpty()) {\"\"} else {\"[\" + signature.generics.join(\", \") + \"]\"}\r\n        let parameters = \"(\" + signature.parameters.map {_.name}.join(\", \") + \")\"\r\n        signature.name + generics + parameters\r\n    }\r\n    let traits = module.traits.map {x =>\r\n        let generics = x.generics.dropFirst()\r\n        let g = x.generics.first().map {_ + \": \"}.else {\"\"}\r\n        (name = g + x.name, generics = generics, symbols = x.methods.map {processSignature(_)})\r\n    }\r\n    let types = module.types.map {x =>\r\n        let variants = x.variants.map {variant =>\r\n            let parameters = if(variant.fields.isEmpty() && x.commonFields.isEmpty()) {\"\"} else {\r\n                \"(\" + [...x.commonFields, ...variant.fields].map {_.name}.join(\", \") + \")\"\r\n            }\r\n            variant.name + parameters\r\n        }\r\n        let methods = module.extends.filter {_.type.{\r\n            | TConstructor(_, name, _) => name == x.name\r\n            | _ => False\r\n        }}.flatMap {_.methods}.map {_.signature}.map {processSignature(_)}\r\n        (name = x.name, generics = x.generics, symbols = [...variants, ...methods])\r\n    }\r\n    let toplevel = if(module.functions.isEmpty()) {[]} else {\r\n        let functions = module.functions.map {processSignature(_.signature)}\r\n        [(name = \"\", generics = [], symbols = [...module.lets.map {_.name}, ...functions])]\r\n    }\r\n    let all = [...toplevel, ...types, ...traits]\r\n    all.map {r => \r\n        let generics = if(r.generics.isEmpty()) {\"\"} else {\"[\" + r.generics.join(\", \") + \"]\"}\r\n        let header = (module.moduleKey.importName() + \" \" + r.name + generics).trim()\r\n        [header, ...r.symbols.sort()]\r\n    }\r\n}\r\n"
    ],
    "names": [
        "BootstrapCommand",
        "RunCommand",
        "mainPath",
        "argument",
        "BrowserCommand",
        "BuildCommand",
        "CheckCommand",
        "filePath",
        "SymbolsCommand",
        "outPath",
        "filePaths",
        "CommandLineError",
        "problem",
        "usageString",
        "main",
        "system",
        "fireflyPath",
        "detectFireflyPath",
        "buildScript",
        "mainPackagePair",
        "emitTarget",
        "resolvedDependencies",
        "fixedPackagePaths",
        "contains",
        "packagePaths",
        "PackagePair",
        "add",
        "slash",
        "compilerModulePath",
        "notEquals",
        "EmitBrowser",
        "EmitExecutable",
        "targetName",
        "EmitBuild",
        "EmitNode",
        "folders",
        "relativeListTo",
        "grab",
        "parent",
        "name",
        "removeLast",
        "base",
        "moduleKey",
        "ModuleKey",
        "build",
        "c",
        "ResolvedDependencies",
        "packages",
        "singleFilePackages",
        "path",
        "new",
        "runCommand",
        "command",
        "mainFile",
        "arguments",
        "process",
        "httpClient",
        "mainTask",
        "prepareFireflyDirectory",
        "importAndRun",
        "at",
        "Location",
        "absolute",
        "throw",
        "CompileError",
        "bundleForBrowser",
        "bundleForPkg",
        "errors",
        "check",
        "None",
        "disabled",
        "isEmpty",
        "CompileErrors",
        "distinct",
        "workingDirectory",
        "fakeLocation",
        "toMap",
        "Pair",
        "PackageInfo",
        "DPackage",
        "Version",
        "TargetNames",
        "DInclude",
        "toSet",
        "columns",
        "flatMap",
        "code",
        "readText",
        "packagePair",
        "scriptPackagePair",
        "tokens",
        "tokenize",
        "parser",
        "module",
        "parseModuleWithPackageInfo",
        "makeSymbolColumns",
        "rowCount",
        "else",
        "map",
        "last",
        "sortBy",
        "w1",
        "tsv",
        "until",
        "i",
        "get",
        "writeText",
        "join",
        "catch",
        "tryCatch",
        "try",
        "parseCommandLine",
        "message",
        "debug",
        "replace",
        "file",
        "line",
        "column",
        "mainArguments",
        "Some",
        "mainName",
        "runArguments",
        "browserArguments",
        "buildArguments",
        "checkArguments",
        "fileName",
        "outName",
        "fileNames",
        "endsWith",
        "s",
        "prefix",
        "mainJsFile",
        "groupName",
        "internalNodeCallEsBuild",
        "packagePath",
        "outputPath",
        "runFile",
        "importName",
        "internalBrowserCallEsBuild",
        "target",
        "cwd",
        "indexOf",
        "runFilePath",
        "pathFromUrl",
        "exists",
        "absolutePath",
        "createDirectory",
        "url",
        "suffix",
        "moduleUrl",
        "\"import\"",
        "meta",
        "\"Error\"",
        "Path",
        "fileURLToPath",
        "\"URL\"",
        "slice",
        "processSignature",
        "signature",
        "generics",
        "parameters",
        "traits",
        "x",
        "dropFirst",
        "g",
        "first",
        "symbols",
        "methods",
        "types",
        "variants",
        "variant",
        "fields",
        "commonFields",
        "filter",
        "extends",
        "type",
        "TConstructor",
        "toplevel",
        "functions",
        "lets",
        "all",
        "r",
        "header",
        "trim",
        "sort",
        "MainCommand",
        "anyTag",
        "internalAnyTag",
        "show",
        "value",
        "z",
        "equals",
        "y",
        "compare",
        "OrderingSame",
        "mainPathOrdering",
        "argumentOrdering",
        "filePathOrdering",
        "outPathOrdering",
        "filePathsOrdering",
        "number",
        "problemOrdering",
        "serializeUsing",
        "serialization",
        "v",
        "checksum",
        "bitOr",
        "autoResize",
        "setUint8",
        "buffer",
        "offset",
        "deserializeUsing",
        "variantIndex",
        "grabUint8",
        "DeserializationChecksumException"
    ],
    "mappings": ""
}