{
    "version": 3,
    "sources": [
        "../../../../../compiler/Tokenizer.ff"
    ],
    "sourcesContent": [
        "import Token\r\nimport Syntax\r\nimport LspHook\r\n\r\ntokenize(file: String, code: String, completionAt: Option[Location], attemptFixes: Bool): List[Token] {\r\n\r\n    let completionLine = completionAt.filter {_.file == file}.map {_.line}.else {-1}\r\n    let completionColumn = completionAt.filter {_.file == file}.map {_.column}.else {-1}\r\n\r\n    let tokens = Array.new[Token]()\r\n    mutable line = 1\r\n    mutable lineOffset = 0\r\n\r\n    mutable startLine = line\r\n    mutable startLineOffset = lineOffset\r\n\r\n    let operatorCharactersString = \"!@#$%&/=?+|^~*<>.:-;\"\r\n    mutable operatorCharacters = Set.new[Char]()\r\n    List.range(operatorCharactersString.size()).map {j =>\r\n        operatorCharacters = operatorCharacters.add(operatorCharactersString.grab(j))\r\n    }\r\n\r\n    function emitToken(kind: TokenKind, startOffset: Int, stopOffset: Int): Unit {\r\n        if(!tokens.isEmpty()) {\r\n            let last = tokens.grabLast()\r\n            if(last.stopLine == startLine && last.kind == LLower && kind.afterKeyword()) {\r\n                if(\r\n                    completionLine == last.startLine && \r\n                    completionColumn >= 1 + last.startOffset - last.startLineOffset &&\r\n                    completionColumn <= 1 + last.stopOffset - last.stopLineOffset\r\n                ) {\r\n                    tokens.push(Token(\r\n                        file, code, LSeparator\r\n                        startLine, startLineOffset, startLineOffset\r\n                        startLine, startLineOffset, startLineOffset\r\n                    ))\r\n                } else {\r\n                    tokens.modify(tokens.size() - 1) {_.Token(kind = LKeyword)}\r\n                }\r\n            }\r\n            if(last.stopLine != startLine && last.kind.beforeSeparator() && kind.afterSeparator()) {\r\n                tokens.push(Token(\r\n                    file, code, LSeparator\r\n                    startLine, startLineOffset, startLineOffset\r\n                    startLine, startLineOffset, startLineOffset\r\n                ))\r\n            }\r\n        }\r\n        tokens.push(Token(\r\n            file, code, kind\r\n            startLine, startLineOffset, startOffset\r\n            line, lineOffset, stopOffset\r\n        ))\r\n    }\r\n\r\n    mutable i = 0\r\n\r\n    function throwError(message: String) {\r\n        let column = (i - startLineOffset) + 1\r\n        throw(CompileError(\r\n            Location(file, line, column)\r\n            message\r\n        ))\r\n    }\r\n\r\n    try {\r\n        while {i < code.size()} {\r\n\r\n            startLine = line\r\n            startLineOffset = lineOffset\r\n\r\n            if(completionLine == line) {\r\n                while {i < code.size() && (code.grab(i) == ' ' || code.grab(i) == '\\t' || code.grab(i) == '\\r')} {\r\n                    if(completionColumn == 1 + i - lineOffset) {\r\n                        emitToken(LLower, i, i)\r\n                    }\r\n                    i += 1\r\n                }\r\n                if(i < code.size() && completionColumn == 1 + i - lineOffset) {\r\n                    let c = code.grab(i)\r\n                    if(!c.isAsciiLetterOrDigit() && c != '_' && c != '\\'' && c != '\"') {\r\n                        emitToken(LLower, i, i)\r\n                        if(i + 1 < code.size() && code.grab(i) == '_') {i += 1}\r\n                    }\r\n                }\r\n            } else {\r\n                while {i < code.size() && (code.grab(i) == ' ' || code.grab(i) == '\\t' || code.grab(i) == '\\r')} {i += 1}\r\n            }\r\n            \r\n            if(i < code.size()):\r\n\r\n            let start = i\r\n\r\n            if(code.grab(i) == '\\n') {\r\n\r\n                i += 1\r\n                line += 1\r\n                lineOffset = i\r\n\r\n            } elseIf {code.grab(i) == '/' && code.grab(i + 1) == '/'} {\r\n\r\n                i += 2\r\n                while {i < code.size() && code.grab(i) != '\\n'} {i += 1}\r\n\r\n            } elseIf {code.grab(i) == '/' && code.grab(i + 1) == '*'} {\r\n\r\n                i += 2\r\n                while {i < code.size() && (code.grab(i) != '*' || code.grab(i + 1) != '/')} {\r\n                    if(i >= code.size()) {\r\n                        throwError(\r\n                            \"Expected end of comment started on line \" + startLine + \", got end of file.\"\r\n                        )\r\n                    }\r\n                    if(code.grab(i) == '\\n') {\r\n                        line += 1\r\n                        lineOffset = i + 1\r\n                    }\r\n                    i += 1\r\n                }\r\n                i += 2\r\n\r\n            } elseIf {code.grab(i) == '\"' || code.grab(i) == '\\''} {\r\n\r\n                let endSign = code.grab(i)\r\n\r\n                mutable multiLine = i + 2 < code.size() &&\r\n                    code.grab(i) == '\"' && code.grab(i + 1) == '\"' && code.grab(i + 2) == '\"'\r\n\r\n                i += if(multiLine) {3} else {1}\r\n                while {i < code.size() && (multiLine || code.grab(i) != endSign)} {\r\n                    if(code.grab(i) == '\\n') {\r\n                        if(multiLine) {\r\n                            line += 1\r\n                            lineOffset = i + 1\r\n                        } else {\r\n                            throwError(\r\n                                \"Unexpected end of line in string.\"\r\n                            )\r\n                        }\r\n                    }\r\n                    if(i >= code.size()) {\r\n                        throwError(\r\n                            \"Expected end of string started on line \" + startLine + \", got end of file.\"\r\n                        )\r\n                    }\r\n                    if(code.grab(i) == '\\\\' && code.grab(i + 1) != '\\n') {i += 1}\r\n                    if(multiLine &&\r\n                        i + 2 < code.size() && (i + 3 >= code.size() || code.grab(i + 3) != '\"') &&\r\n                        code.grab(i) == '\"' && code.grab(i + 1) == '\"' && code.grab(i + 2) == '\"'\r\n                    ) {\r\n                        multiLine = False\r\n                        i += 2\r\n                    } else {\r\n                        i += 1\r\n                    }\r\n                }\r\n                i += 1\r\n                emitToken(if(endSign == '\"') {LString} else {LChar}, start, i)\r\n\r\n            } elseIf {code.grab(i).isAsciiLetter()} {\r\n\r\n                let kind = if(code.grab(i) >= 'a') {LLower} else {LUpper}\r\n                i += 1\r\n                while {i < code.size() && code.grab(i).isAsciiLetterOrDigit()} {i += 1}\r\n                if(i < code.size() && kind == LUpper && code.grab(i) == '.' && (\r\n                    tokens.isEmpty() || tokens.grabLast().kind != LArrowThin\r\n                )) {\r\n                    i += 1\r\n                    emitToken(LNamespace, start, i)\r\n                } else {\r\n                    emitToken(kind, start, i)\r\n                }\r\n\r\n            } elseIf {code.grab(i).isAsciiDigit()} {\r\n\r\n                if(i + 2 < code.size() && code.grab(i) == '0' && (\r\n                    code.grab(i + 1) == 'x' || code.grab(i + 1) == 'X'\r\n                )) {\r\n                    i += 2\r\n                    while {i < code.size() && (code.grab(i).isAsciiDigit() || (\r\n                        code.grab(i) >= 'a' && code.grab(i) <= 'f'\r\n                    ) || (\r\n                        code.grab(i) >= 'A' && code.grab(i) <= 'F'\r\n                    ))} {\r\n                        i += 1\r\n                    }\r\n                    if(start == i - 2) {\r\n                        throwError(\"Unexpected character: \" + Show.show(code.grab(start + 2)))\r\n                    }\r\n                    emitToken(LInt, start, i)\r\n                } else:\r\n\r\n                mutable dot = False\r\n                mutable exponent = False\r\n                while {i < code.size() && code.grab(i).isAsciiDigit()} {\r\n                    i += 1\r\n                    if((code.grab(i) == 'e' || code.grab(i) == 'E') && !exponent) {\r\n                        i += 1\r\n                        dot = True\r\n                        exponent = True\r\n                        if(code.grab(i) == '+' || code.grab(i) == '-') {i += 1}\r\n                    }\r\n                    if(\r\n                        i + 1 < code.size() && code.grab(i) == '.' &&\r\n                        code.grab(i + 1).isAsciiDigit() &&\r\n                        !dot && !exponent\r\n                    ) {\r\n                        i += 1\r\n                        dot = True\r\n                    }\r\n                }\r\n                emitToken(if(dot || exponent) {LFloat} else {LInt}, start, i)\r\n\r\n            } elseIf {code.grab(i) == '_'} {\r\n\r\n                i += 1\r\n                emitToken(LWildcard, start, i)\r\n\r\n            } elseIf {code.grab(i) == ','} {\r\n\r\n                i += 1\r\n                emitToken(LComma, start, i)\r\n\r\n            } elseIf {\r\n                code.grab(i) == '?' || \r\n                (code.grab(i) == '!' && (i + 1 >= code.size() || code.grab(i + 1) != '='))\r\n            } {\r\n                \r\n                i += 1\r\n                emitToken(LUnary, start, i)\r\n                \r\n            } elseIf {operatorCharacters.contains(code.grab(i))} {\r\n\r\n                i += 1\r\n                \r\n                if(code.grab(i - 1) == '.' && i + 1 < code.size() && code.grab(i) == '.' && code.grab(i + 1) != '.') {\r\n                    emitToken(LDot, start, i)\r\n                    let newStart = i\r\n                    if(!completionAt.isEmpty()) {emitToken(LLower, newStart, newStart)}\r\n                    i += 1\r\n                    emitToken(LDot, newStart, i)\r\n                } else:\r\n\r\n                while {i < code.size() && operatorCharacters.contains(code.grab(i))} {i += 1}\r\n                let o =\r\n                    if(i - start == 1 && code.grab(i - 1) == '.') {\r\n                        LDot\r\n                    } elseIf {i - start == 1 && code.grab(i - 1) == ';'} {\r\n                        LSemicolon\r\n                    } elseIf {i - start == 1 && code.grab(i - 1) == '|'} {\r\n                        LPipe\r\n                    } elseIf {i - start == 1 && code.grab(i - 1) == ':'} {\r\n                        LColon\r\n                    } elseIf {i - start == 3 && code.grab(i - 3) == '.' && code.grab(i - 2) == '.' && code.grab(i - 1) == '.'} {\r\n                        LDotDotDot\r\n                    } elseIf {i - start == 2 && code.grab(i - 2) == '-' && code.grab(i - 1) == '>'} {\r\n                        LArrowThin\r\n                    } elseIf {i - start == 2 && code.grab(i - 2) == '=' && code.grab(i - 1) == '>'} {\r\n                        LArrowThick\r\n                    } elseIf {i - start == 1 && code.grab(i - 1) == '='} {\r\n                        LAssign\r\n                    } elseIf {i - start == 2 && code.grab(i - 2) == '+' && code.grab(i - 1) == '='} {\r\n                        LAssignPlus\r\n                    } elseIf {i - start == 2 && code.grab(i - 2) == '-' && code.grab(i - 1) == '='} {\r\n                        LAssignMinus\r\n                    } elseIf {i - start == 2 && code.grab(i - 2) == '*' && code.grab(i - 1) == '='} {\r\n                        LAssignMultiplication\r\n                    } elseIf {i - start == 2 && code.grab(i - 2) == '/' && code.grab(i - 1) == '='} {\r\n                        LAssignDivision\r\n                    } else {\r\n                        LOperator\r\n                    }\r\n\r\n                emitToken(o, start, i)\r\n\r\n            } elseIf {\r\n                code.grab(i) == '(' || code.grab(i) == '[' || code.grab(i) == '{'\r\n            } {\r\n\r\n                i += 1\r\n                emitToken(LBracketLeft, start, i)\r\n\r\n            } elseIf {\r\n                code.grab(i) == ')' || code.grab(i) == ']' || code.grab(i) == '}'\r\n            } {\r\n\r\n                i += 1\r\n                emitToken(LBracketRight, start, i)\r\n\r\n            } elseIf {\r\n                i < code.size()\r\n            } {\r\n\r\n                if(attemptFixes) {i += 1} else:\r\n                throwError(\"Unexpected character: \" + Show.show(code.grab(i)))\r\n\r\n            }\r\n\r\n        }\r\n    } catch {| GrabException e, error =>\r\n        throw(CompileError(Location(file, line, i - lineOffset), \"Unexpected end of file\"))\r\n    }\r\n\r\n    List.range(5).each {_ => emitToken(LEnd, i, i) }\r\n\r\n    tokens.drain()\r\n\r\n}\r\n"
    ],
    "names": [
        "tokenize",
        "file",
        "code",
        "completionAt",
        "attemptFixes",
        "completionLine",
        "else",
        "map",
        "filter",
        "w1",
        "line",
        "completionColumn",
        "column",
        "tokens",
        "new",
        "lineOffset",
        "startLine",
        "startLineOffset",
        "operatorCharactersString",
        "operatorCharacters",
        "range",
        "j",
        "add",
        "grab",
        "emitToken",
        "kind",
        "startOffset",
        "stopOffset",
        "isEmpty",
        "last",
        "grabLast",
        "stopLine",
        "equals",
        "LLower",
        "afterKeyword",
        "stopLineOffset",
        "Token",
        "LSeparator",
        "modify",
        "c",
        "LKeyword",
        "beforeSeparator",
        "afterSeparator",
        "i",
        "throwError",
        "message",
        "throw",
        "CompileError",
        "Location",
        "isAsciiLetterOrDigit",
        "start",
        "endSign",
        "multiLine",
        "LString",
        "LChar",
        "isAsciiLetter",
        "LUpper",
        "notEquals",
        "LArrowThin",
        "LNamespace",
        "isAsciiDigit",
        "show",
        "LInt",
        "dot",
        "exponent",
        "LFloat",
        "LWildcard",
        "LComma",
        "LUnary",
        "contains",
        "LDot",
        "newStart",
        "o",
        "LSemicolon",
        "LPipe",
        "LColon",
        "LDotDotDot",
        "LArrowThick",
        "LAssign",
        "LAssignPlus",
        "LAssignMinus",
        "LAssignMultiplication",
        "LAssignDivision",
        "LOperator",
        "LBracketLeft",
        "LBracketRight",
        "e",
        "error",
        "LEnd",
        "drain"
    ],
    "mappings": ""
}