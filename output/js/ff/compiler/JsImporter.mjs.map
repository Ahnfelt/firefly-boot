{
    "version": 3,
    "sources": [
        "../../../../../compiler/JsImporter.ff"
    ],
    "sourcesContent": [
        "import Syntax\r\n\r\nclass JsImporter(\r\n    mutable imports: Map[String, String]\r\n)\r\n\r\nnew(): JsImporter {\r\n    JsImporter(Map.new())\r\n}\r\n\r\nfail[T](at: Location, message: String): T {\r\n    panic(message + \" \" + at.show())\r\n}\r\n\r\nextend self: JsImporter {\r\n\r\n    add(url: String): String {\r\n        let importName = self.imports.get(url).{\r\n            | None =>\r\n                let n = \"import$\" + self.imports.size()\r\n                self.imports = self.imports.add(url, n)\r\n                n\r\n            | Some(n) => n\r\n        }\r\n        importName\r\n    }\r\n\r\n    process(at: Location, code: String): String {\r\n        let space = code.takeWhile {c => c == ' ' || c == '\\t' || c == '\\r' || c == '\\n' || c == ';'}\r\n        let rest = code.dropFirst(space.size())\r\n        if(!rest.startsWith(\"import * as \")) {code} else:\r\n        let rest2 = rest.dropFirst(\"import * as \".size())\r\n        let name = rest2.takeWhile {_.isAsciiLetterOrDigit()}\r\n        if(name.size() == 0) {throw(CompileError(at, \"Expected alias after \\\"import * as \\\"\"))}\r\n        let rest3 = rest2.dropFirst(name.size())\r\n        if(!rest3.startsWith(\" from '\")) {throw(CompileError(at, \"Expected \\\" from '\\\" after \\\"import * as ...\\\"\"))}\r\n        let rest4 = rest3.dropFirst(\" from '\".size())\r\n        let url = rest4.takeWhile {_ != '\\''}\r\n        if(url.size() == 0) {throw(CompileError(at, \"Expected module name after \\\" from '\\\"\"))}\r\n        if(url.any {_ == '\\n'}) {throw(CompileError(at, \"Unclosed module name string\"))}\r\n        let rest5 = rest4.dropFirst(url.size() + 1)\r\n        let importName = self.add(url)\r\n        space + \"const \" + name + \" = \" + importName + self.process(at, rest5)\r\n    }\r\n\r\n    generateImports(ignoreModules: Set[String]): List[String] {\r\n        self.imports.pairs().map {| Pair(moduleName, mangledName) =>\r\n            if(ignoreModules.contains(moduleName)) {\r\n                \"const \" + mangledName + \" = void 0; // Ignored import\"\r\n            } else {\r\n                \"import * as \" + mangledName + \" from '\" + moduleName + \"';\"\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n"
    ],
    "names": [
        "JsImporter",
        "imports",
        "new",
        "fail",
        "at",
        "message",
        "panic",
        "show",
        "add",
        "self",
        "url",
        "importName",
        "None",
        "n",
        "size",
        "get",
        "process",
        "code",
        "space",
        "takeWhile",
        "c",
        "rest",
        "dropFirst",
        "startsWith",
        "rest2",
        "name",
        "w1",
        "isAsciiLetterOrDigit",
        "CompileError",
        "rest3",
        "rest4",
        "any",
        "rest5",
        "generateImports",
        "ignoreModules",
        "map",
        "pairs",
        "moduleName",
        "mangledName",
        "contains"
    ],
    "mappings": "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"
}