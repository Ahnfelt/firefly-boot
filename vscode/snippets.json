{
	"main": {
		"prefix": "main",
		"body": [
			"main(system: NodeSystem) {",
			"    $0",
			"}"
		],
		"description": "Main function"
	},
	"nodeMain": {
		"prefix": "node",
		"body": [
			"nodeMain(system: NodeSystem) {",
			"    $0",
			"}"
		],
		"description": "Node main function"
	},
	"browserMain": {
		"prefix": "browser",
		"body": [
			"browserMain(system: BrowserSystem) {",
			"    $0",
			"}"
		],
		"description": "Browser main function"
	},
	"buildMain": {
		"prefix": "build",
		"body": [
			"buildMain(system: BuildSystem) {",
			"    $0",
			"}"
		],
		"description": "Build main function"
	},
	"extend": {
		"prefix": "extend",
		"body": [
			"extend ${1:self}: $2 {",
			"    $0",
			"}"
		],
		"description": "Extend a type with methods"
	},
	"data": {
		"prefix": "data",
		"body": [
			"data ${1}($2) {$0}"
		],
		"description": "Data type declaration"
	},
	"class": {
		"prefix": "class",
		"body": [
			"class ${1}($2) {$0}"
		],
		"description": "Class type declaration"
	},
	"capability": {
		"prefix": "capability",
		"body": [
			"capability ${1}($2) {$0}"
		],
		"description": "Capability type declaration"
	},
	"package": {
		"prefix": "package",
		"body": [
			"package $1:$2:$3"
		],
		"description": "Package declaration"
	},
	"dependency": {
		"prefix": "dependency",
		"body": [
			"dependency $1:$2:$3"
		],
		"description": "Dependency declaration"
	},
	"import": {
		"prefix": "import",
		"body": [
			"import $1 from $2:$3"
		],
		"description": "Import declaration"
	},
	"function": {
		"prefix": "function",
		"body": [
			"function $1($2): $3 {",
			"    $0",
			"}"
		],
		"description": "Function definition"
	},
	"let": {
		"prefix": "let",
		"body": [
			"let $1 = $0"
		],
		"description": "Immutable variable definition"
	},
	"mutable": {
		"prefix": "mutable",
		"body": [
			"mutable $1 = $0"
		],
		"description": "Mutable variable definition"
	},
	"if": {
		"prefix": "if",
		"body": [
			"if($1) {",
			"    $0",
			"}"
		],
		"description": "If expression"
	},
	"else": {
		"prefix": "else",
		"body": [
			"else {",
			"    $0",
			"}"
		],
		"description": "Else expression part"
	},
	"elseif": {
		"prefix": "elseif",
		"body": [
			"elseIf {$1} {",
			"    $0",
			"}"
		],
		"description": "ElseIf expression part"
	},
	"try": {
		"prefix": "try",
		"body": [
			"try {",
			"    $1",
			"} catch {| ${2:MyException e}, error =>",
			"    $3",
			"} finally {",
			"    $0",
			"} grab()"
		],
		"description": "Try catch finanlly expression"
	},
	"while": {
		"prefix": "while",
		"body": [
			"while {$1} {",
			"    $0",
			"}"
		],
		"description": "While expression"
	},
	"do": {
		"prefix": "do",
		"body": [
			"do {",
			"    $0",
			"}"
		],
		"description": "Do expression"
	},
	"dowhile": {
		"prefix": "dowhile",
		"body": [
			"doWhile {",
			"    $0",
			"}"
		],
		"description": "Do while expression"
	},
	"log": {
		"prefix": "log",
		"body": [
			"Log.debug(\"$1: \" + $1)"
		],
		"description": "Log expression"
	}
}
