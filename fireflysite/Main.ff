import WebServer from ff:webserver
import Lux from ff:lux
import Guide
import GuideIntroduction
import Styles

browserMain(system: BrowserSystem): Unit {
    Lux.renderById(system, "main") {lux => 
        Guide.render(lux, "", Guide([GuideIntroduction.new()]))
    }
}

nodeMain(system: NodeSystem): Unit {
    let host = system.arguments().grab(0)
    let port = system.arguments().grab(1).grabInt()
    WebServer.new(system, host, port).listen {request =>
        let path = request.readPath()
        if(path.startsWith("/guide/")) {
            serveGuideHtml(request)
        } elseIf {path.startsWith("/js/") && !path.contains("..")} {
            request.writeHeader("Content-Type", "text/javascript; charset=UTF-8")
            request.writeText(system.assets().readText(path))
        } else {
            let parameters = if(request.readRawQueryString().size() == 0) {""} else {
                "?" + request.readRawQueryString()
            }
            request.writeHeader("Location", "https://www.firefly-lang.org" + path + parameters)
            request.writeStatus("302 Found")
        }
    }
}

buildMain(system: BuildSystem) {
    let browser = system.compileForBrowser("Main.ff")
    let assets = AssetSystem.create()
        .addAssets("/js/", browser.assets())
    system.setAssets(assets)
}

serveGuideHtml(request: WebRequest[WebResponse]): Unit {
    request.writeHeader("Content-Type", "text/html; charset=UTF-8")
    request.writeText("<!doctype html>")
    request.writeText("<html style='background-color: #1f1f1f; color: #cdcdcd; width: 100%; height: 100%;'>")
    request.writeText("<head>")
    request.writeText("<title>Firefly Guide</title>")
    request.writeText("</head>")
    request.writeText("<body style='margin: 0; padding: 0; width: 100%; height: 100%; overflow: hidden;'>")
    request.writeText("<div id='main'></div>")
    request.writeText("<script type='module' src='/js/script/script/Main.mjs'></script>")
    request.writeText("</body>")
    request.writeText("</html>")
}
