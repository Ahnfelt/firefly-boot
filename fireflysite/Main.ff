import WebServer from ff:webserver
import Lux from ff:lux
import Guide
import GuideAll
import ExamplesOverview
import PackagesOverview
import CommunityOverview
import FrontPage
import Styles

nodeMain(system: NodeSystem): Unit {
    let host = system.arguments().grab(0)
    let port = system.arguments().grab(1).grabInt()
    WebServer.new(system, host, port).listen {request =>
        let path = request.readPath()
        if(path.startsWith("/guide/")) {
            serveGuideHtml("Firefly Guide", request)
        } elseIf {path.startsWith("/examples/")} {
            serveGuideHtml("Firefly Examples", request)
        } elseIf {path.startsWith("/packages/")} {
            serveGuideHtml("Firefly Packages", request)
        } elseIf {path.startsWith("/community/")} {
            serveGuideHtml("Firefly Community", request)
        } elseIf {path.startsWith("/front/")} {
            serveGuideHtml("Firefly", request)
        } elseIf {path.startsWith("/js/") && !path.contains("..")} {
            request.writeHeader("Content-Type", "text/javascript; charset=UTF-8")
            let asset = if(path == "/js/ff/fireflysite/Main.mjs" && system.assets().exists("/js/Main.bundle.js")) {
                "/js/Main.bundle.js"
            } else {
                path
            }
            request.writeText(system.assets().readText(asset))
        } elseIf {path.startsWith("/favicon.ico")} {
            request.writeHeader("Content-Type", "image/png")
            request.writeStream(system.assets().readStream("/assets/firefly-logo-notext.png"))
        } elseIf {path.startsWith("/assets/FireflyMono.ttf")} {
            request.writeHeader("Content-Type", "font/ttf")
            request.writeStream(system.assets().readStream("/assets/NotoSansMono-Regular.ttf"))
        } elseIf {path.startsWith("/assets/FireflySans.ttf")} {
            request.writeHeader("Content-Type", "font/ttf")
            request.writeStream(system.assets().readStream("/assets/UbuntuSans-VariableFont_wdth,wght.ttf"))
        } else {
            let parameters = if(request.readRawQueryString().size() == 0) {""} else {
                "?" + request.readRawQueryString()
            }
            request.writeHeader("Location", "https://www.firefly-lang.org" + path + parameters)
            request.writeStatus("302 Found")
        }
    }
}

browserMain(system: BrowserSystem): Unit {
    let demos = ExamplesOverview.demos()
    let guides = [
        Guide("/front/", [FrontPage.new()])
        Guide("/guide/", GuideAll.mock())
        Guide("/examples/", ExamplesOverview.mock())
        Guide("/packages/", [PackagesOverview.new()])
        Guide("/community/", [CommunityOverview.new()])
    ]
    guides.collect {guide => 
        if(system.urlPath().startsWith(guide.prefix)):
        Lux.renderById(system, "main") {lux => 
            let kebab = system.urlPath().dropFirst(guide.prefix.size())
            Guide.render(lux, system, guide.prefix, kebab, guides, demos)
        }
    }
}

buildMain(system: BuildSystem) {
    let browser = system.compileForBrowser("Main.ff")
    let assets = AssetSystem.create()
        .addAssets("/js/", browser.assets())
        .addAssets("/assets/", system.packageAssets().assets("/assets/"))
    system.setAssets(assets)
}

serveGuideHtml(title: String, request: WebRequest[WebResponse]): Unit {
    request.writeHeader("Content-Type", "text/html; charset=UTF-8")
    request.writeText("<!doctype html>")
    request.writeText("<html lang='en' style='background-color: #303236; color: #dadada; width: 100%; height: 100%; color-scheme: dark;'>")
    request.writeText("<head>")
    request.writeText("<title>" + title + "</title>")
    request.writeText("<meta name='viewport' content='width=device-width, initial-scale=1.0'>")
    request.writeText("<meta name='theme-color' content='#303236'>")
    request.writeText("<style>@font-face { font-family: 'Firefly Mono'; font-display: fallback; src: url('/assets/FireflyMono.ttf'); unicode-range: U+000-5FF; }</style>")
    request.writeText("<style>@font-face { font-family: 'Firefly Sans'; font-display: fallback; src: url('/assets/FireflySans.ttf'); unicode-range: U+000-5FF; }</style>")
    request.writeText("</head>")
    request.writeText("<body style='margin: 0; padding: 0; width: 100%; height: 100%; touch-action: manipulation;'>")
    request.writeText("<div id='main'></div>")
    request.writeText("<script type='module' src='/js/ff/fireflysite/Main.mjs'></script>")
    request.writeText("</body>")
    request.writeText("</html>")
}
