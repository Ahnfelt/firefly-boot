data Menu(
    path: String
    name: String
    menu: List[Menu]
)

data MenuItem(
    path: List[String]
    name: String
    next: Option[MenuItem]
)

menu: List[Menu] = [
    Menu("getting-started", "Getting started", [])
    Menu("examples", "Examples", [
        Menu("counting-button", "Counting button", [])
        Menu("matching-passwords", "Matching passwords", [])
        Menu("connecting-to-postgresql", "Connecting to PostgreSQL", [])
    ])
    Menu("reference", "Reference", [
        Menu("modules-and-packages", "Modules and packages", [])
        Menu("base-types", "Base types", [])
        Menu("user-defined-types", "User defined types", [])
        Menu("statements-and-expressions", "Statements and expressions", [])
        Menu("functions-and-methods", "Functions and methods", [])
        Menu("pattern-matching", "Pattern matching", [])
        Menu("traits-and-instances", "Traits and instances", [])
        Menu("exceptions", "Exceptions", [])
        Menu("structured-concurrency", "Structured concurrency", [])
        Menu("javascript-interop", "JavaScript interop", [])
        
    ])
    Menu("packages", "Packages", [])
    Menu("community", "Community", [])
]

findItem(items: List[Menu], path: List[String]): Option[MenuItem] {
    path.{
        | [p1, p2] => 
            let m1 = items.find {_.path == p1}.grab()
            let m2 = m1.menu.find {_.path == p2}.grab()
            Some(MenuItem(path, m2.name, None))
        | _ => None
    }
}
