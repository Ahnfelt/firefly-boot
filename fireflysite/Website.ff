import Lux from ff:lux
import LuxEvent from ff:lux
import Css from ff:lux
import Styles
import Menu

renderContentWithNext(
    lux: Lux
    menuItem: MenuItem
    content: Lux => Unit
) {
    lux.add("div") {
        lux.useState(False): showMenu, setMenu =>
        lux.cssClass(Styles.pageCss)
        lux.add("div") {
            lux.cssClass(Styles.guideCss)
            lux.add("main") {
                lux.cssClass(Styles.guideMainCss)

                lux.add("article") {
                    lux.cssClass(Styles.guideDocumentCss)
                    content(lux)
                    renderNext(lux, menuItem.next)
                }
            }
            renderTopbar(lux, showMenu, setMenu)
            lux.add("div") {
                lux.cssClass(Styles.guideSidebarBackdropCss)
                if(showMenu) {lux.cssClass(Styles.guideSidebarBackdropOpenCss)}
                lux.onClick {event =>
                    event.preventDefault()
                    setMenu(False)
                }
            }
            renderSidebar(lux, menuItem.path, showMenu)
        }
    }
}

renderNext(lux: Lux, nextItem: Option[MenuItem]) {
    nextItem.each {next => 
        lux.div {
            lux.cssClass(Styles.guideNextButtonCss)
            lux.add("a") {
                lux.cssClass(Styles.guideButtonCss)
                lux.set("href", "/" + next.path.join("/"))
                lux.text("Next: " + next.name)
            }
        }
    }
}

renderTopbar(lux: Lux, showMenu: Bool, setMenu: Bool => Unit) {
    lux.add("div") {
        lux.cssClass(Styles.guideTopbarCss)
        lux.add("a") {
            lux.set("href", "/")
            lux.cssClass(Styles.guideTopbarLogoCss)
            lux.add("img") {
                lux.set("src", "/assets/image/firefly-logo-yellow.webp")
            }
            lux.div {
                lux.text("Firefly")
            }
        }
        lux.add("button") {
            lux.set("aria-label", "Toggle the menu")
            lux.cssClass(Styles.guideTopbarButtonCss)
            lux.onClick {event =>
                event.preventDefault()
                setMenu(True)
            }
        }
    }
}

renderSidebar(lux: Lux, selectedPath: List[String], showMenu: Bool) {
    lux.add("nav") {
        lux.cssClass(Styles.guideSidebarCss)
        if(showMenu) {lux.cssClass(Styles.guideSidebarOpenCss)}
        lux.add("a") {
            lux.set("href", "/")
            lux.cssClass(Styles.guideSidebarLogoCss)
            lux.add("img") {
                lux.set("src", "/assets/image/firefly-logo-yellow.webp")
            }
            lux.div {
                lux.text("Firefly")
            }
        }
        lux.add("form") {
            lux.set("role", "search")
            lux.add("input") {
                lux.set("aria-label", "Search")
                lux.cssClass(Styles.searchInputCss)
                lux.set("placeholder", "Search...")
            }
        }
        lux.add("ul") {
            lux.cssClass(Styles.guideSidebarUl1Css)
            Menu.menu.each {item =>
                lux.add("li") {
                    lux.cssClass(Styles.guideSidebarLi1Css)
                    lux.add("a") {
                        lux.cssClass(Styles.whiteLinkCss)
                        let heading = item.name
                        if(selectedPath == [item.path]) {
                            lux.set("aria-current", "page")
                        }
                        lux.set("href", "/" + item.path)
                        lux.text(heading)
                    }
                    if(item.menu.size() > 1):
                    lux.add("ul") {
                        lux.cssClass(Styles.guideSidebarUl2Css)
                        item.menu.each {subItem =>
                            lux.add("li") {
                                lux.cssClass(Styles.guideSidebarLi2Css)
                                lux.add("a") {
                                    lux.cssClass(Styles.whiteLinkCss)
                                    let heading = subItem.name
                                    if(selectedPath == [item.path, subItem.path]) {
                                        lux.set("aria-current", "page")
                                    }
                                    lux.set("href", "/" + item.path + "/" + subItem.path)
                                    lux.text(heading)
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}