import Lux from ff:lux
import WebServer from ff:webserver
import Router
import Guide
import ExamplesOverview
import FrontPage
import DocumentParser
import Html
import Main
import Website
import Menu

routeModule = SourceLocation.here().module()

data PageData(path: List[String], sections: List[Section])

handle(request: WebRequest[WebResponse], context: RouteContext, kebab: String) {
    let path = ["reference", kebab]
    let asset = "/assets/markdown/reference/" + kebab + ".md"
    try {context.system.assets().readText(asset)}.toOption().or {
        Log.trace("Asset not found: " + asset)
        request.writeText("404 Not Found")
        request.writeStatus("404 Not Found")
    }: markdown =>
    let parser = DocumentParser(kebab, markdown.split('\n'), 0)
    let sections = parser.parseDocument()
    let pageData = PageData(path, sections)
    let title = kebab
    Html.renderAndServe(context.system, routeModule, pageData, title, request, {render(_, pageData)})
}

browserMain(system: BrowserSystem) {
    Html.renderToMain(system, {render(_, _)})
}

render(lux: Lux, data: PageData) {
    let menuItem = Menu.findItem(Menu.menu, data.path).grab()
    Website.renderContentWithNext(lux, menuItem) {lux =>
        Guide.renderSections(lux, data.sections, ExamplesOverview.demos())
    }
}
