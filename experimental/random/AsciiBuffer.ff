nodeMain(system: NodeSystem) {
    let random = Random.newFromInt(42)
    let buffer = Buffer.new(10000)
    random.nextBytes(buffer, 0, buffer.size())
    //0.until(buffer.size()).each {i => buffer.setUint8(i, buffer.grabUint8(i).bitAnd(0x1f))}
    Log.debug(Buffer.fromByteList(buffer.toByteList().sort()).toLetter16())
    let x = Buffer.fromByteList([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 100, 101, 102, 103, 104, 105])
    let a = x.toLetter16()
    let b = Buffer.fromLetter16(a.upper())
    Log.debug(x.toByteList().map {Show.show(_)}.join(" "))
    Log.debug(a)
    Log.debug(b.toByteList().map {Show.show(_)}.join(" "))
    Log.debug(Show.show((16.bitAnd(0x0f) + 0x68)))
    Log.debug(Show.show((16.bitRightUnsigned(4).bitAnd(0x0f) + 0x68).bitLeft(8)))
}