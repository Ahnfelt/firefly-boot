main(system: NodeSystem): Unit {
    testMap(system)
    testIntMap(system)
    testStringMap(system)
    testStack(system)
    testRawMap()
}

testStringMap(system: NodeSystem) {
    let measurement = system.time().measure {
        let map = StringMap.new()
        mutable i = 0
        while {i < 1000000} {
            map.set("" + i, i)
            i += 1
        }
    }
    Log.debug("StringMap: " + measurement.second.show())
}

testIntMap(system: NodeSystem) {
    let measurement = system.time().measure {
        let map = IntMap.new()
        mutable i = 0
        while {i < 1000000} {
            map.set(i, i)
            i += 1
        }
    }
    Log.debug("IntMap: " + measurement.second.show())
}

testMap(system: NodeSystem) {
    let measurement = system.time().measure {
        mutable map = [].toMap()
        mutable i = 0
        while {i < 1000000} {
            map = map.add(i, i)
            i += 1
        }
    }
    Log.debug("Map: " + measurement.second.show())
}

testStack(system: NodeSystem) {
    let measurement = system.time().measure {
        let map = [].toStack()
        mutable i = 0
        while {i < 1000000} {
            map.set(i, i)
            i += 1
        }
    }
    Log.debug("Stack: " + measurement.second.show())
}

testRawMap()
    target js sync """
        const start = performance.now();
        const map = new Map();
        let i = 0;
        while(i < 1000000) {
            map.set(i, i);
            i += 1
        }
        console.log("RawMap: " + (performance.now() - start) + " ms")
    """
