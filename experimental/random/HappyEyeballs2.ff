// https://datatracker.ietf.org/doc/html/rfc8305#section-5

type Ip(ipAddress: String, seconds: Duration, succeed: Bool)

main(system: System): Unit {
    let ips = [
        Ip("1.1.1.1", Duration(1.7), False)
        Ip("2.2.2.2", Duration(0.4), False)
        Ip("3.3.3.3", Duration(1.5), True)
        Ip("4.4.4.4", Duration(0.6), True)
    ]
    let winner = happyEyeballs(system.tasks(), ips)
    Log.debug(winner)
}

happyEyeballs(
    taskSystem: TaskSystem,
    ips: List[Ip]
): String {
    let ip = ips.expectFirst()
    let channel = taskSystem.channel(capacity = 2)
    taskSystem.race([
        {
            channel.write(Unit)
            Try.catch {
                taskSystem.sleep(ip.seconds)
                if(!ip.succeed) { panic("Network error") }
                ip.ipAddress
            } { error =>
                channel.write(Unit)
                error.rethrow()
            }
        }
        {
            channel.read()
            Channel.readOr(channel, {_}).timeout(Duration(0.5), {})
            happyEyeballs(taskSystem, ips.dropFirst())
        }
    ])
}
