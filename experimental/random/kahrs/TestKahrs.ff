import Kahrs

nodeMain(system: NodeSystem): Unit {

    let values = [8, 3, 2, 1, 4, 7, 6, 5, 9]
    values.foldLeft(Kahrs.E, {t, a =>
        let t2 = Kahrs.insert(a, t)
        Log.debug("Insert " + a + ": " + Show.show(toList(t2)))
        t2
    })
    values.foldLeft(Kahrs.E, {t, a =>
        let t2 = Kahrs.delete(a, t)
        Log.debug("Delete " + a + ": " + Show.show(toList(t2)))
        t2
    })

    Log.debug(Show.show(toList(Kahrs.delete(1, Kahrs.insert(1, Kahrs.insert(2, Kahrs.E))))))
    Log.debug(Show.show(toList(Kahrs.delete(2, Kahrs.insert(1, Kahrs.insert(2, Kahrs.E))))))
    Log.debug(Show.show(toList(Kahrs.delete(1, Kahrs.insert(2, Kahrs.insert(1, Kahrs.E))))))
    Log.debug(Show.show(toList(Kahrs.delete(2, Kahrs.insert(2, Kahrs.insert(1, Kahrs.E))))))
}

toList[A: Order](t: RB[A]): List[A] {
    | E => []
    | T(_, left, e, right) => [...toList(left), e, ...toList(right)]
}