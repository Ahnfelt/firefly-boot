import HttpServer from ff:httpserver

import Lux
import LuxEvent

mainComponent(): Lux {
    Lux.useState([]): chat, setChat => 
    Lux.useState(""): message, setMessage => 
    Lux.div()
        .add(Lux.div().addList(chat.map {Lux.div(_)}))
        .add(Lux.form()
            .add(Lux.input()
                .with("value", message)
                .on("input") {event => setMessage(event.text())}
            )
            .on("submit") {event => 
                event.preventDefault()
                setChat([...chat, message])
            }
        )
}

browserMain(system: BrowserSystem): Unit {
    Lux.mountById(system, "main", mainComponent())
}

nodeMain(system: NodeSystem): Unit {
    HttpServer.listen(system, "localhost", 8080) {request, response =>
        if(request.path() == "/") {
            response.setHeader("Content-Type", ["text/html; charset=UTF-8"])
            response.writeText("<!doctype html>")
            response.writeText("<div id='main'></div>")
            response.writeText("<script type='module' src='/js/script/script/WebApp.mjs'></script>")
        } elseIf {request.path().startsWith("/js/") && !request.path().contains("..")} {
            response.setHeader("Content-Type", ["text/javascript; charset=UTF-8"])
            response.writeText(system.assets().readText(request.path()))
        } else {
            response.writeStatus(404, Some("Not found"))
        }
    }
}

buildMain(system: BuildSystem) {
    let browser = system.compileForBrowser("WebApp.ff")
    let assets = AssetSystem.create().addAssets("/js", browser.assets())
    system.setAssets(assets)
}
