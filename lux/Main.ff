import HttpServer from ff:httpserver

import Lux
import LuxEvent

countButton(): Lux {
    Lux.component:
    Lux.useState(0): apples, setApples =>
    Lux.new("div")
        .add(Lux.new("h1").text(apples + " apples"))
        .add(
            Lux.new("button")
                .text("More apples!")
                .on("click") {event =>
                    event.preventDefault()
                    setApples(apples + 1)
                }
        )
}

browserMain(system: BrowserSystem): Unit {
    Lux.mount(
        element = system.js().global().get("document").call1("getElementById", "main")
        lux = countButton() // (system, {Log.trace("Twenty!")})
    )
}

nodeMain(system: NodeSystem): Unit {
    HttpServer.listen(system, "localhost", 8080) {request, response =>
        if(request.path() == "/") {
            response.setHeader("Content-Type", ["text/html; charset=UTF-8"])
            response.writeText("<!doctype html>")
            response.writeText("<div id='main'></div>")
            response.writeText("<script type='module' src='/js/script/script/Main.mjs'></script>")
        } elseIf {request.path().startsWith("/js/") && !request.path().contains("..")} {
            response.setHeader("Content-Type", ["text/javascript; charset=UTF-8"])
            response.writeText(system.assets().readText(request.path()))
        } else {
            response.writeStatus(404, Some("Not found"))
        }
    }
}

buildMain(system: BuildSystem) {
    let browser = system.compileForBrowser("Main.ff")
    let assets = AssetSystem.create().addAssets("/js", browser.assets())
    system.setAssets(assets)
}
