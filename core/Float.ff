data Float {}

extend self: Float {

    toInt(): Int
        target js sync "return Math.trunc(self_) || 0"

    round(): Float
        target js sync "return Math.round(self_)"

    floor(): Float
        target js sync "return Math.floor(self_)"

    ceil(): Float
        target js sync "return Math.ceil(self_)"

    truncate(): Float
        target js sync "return Math.trunc(self_)"

    sign(): Float
        target js sync "return Math.sign(self_)"

    abs(): Float
        target js sync "return Math.abs(self_)"

    toFixed(digits: Int): String
        target js sync "return self_.toFixed(digits_)"

    min(that: Float): Float 
        target js sync "return Math.min(self_, that_)"

    max(that: Float): Float
        target js sync "return Math.max(self_, that_)"

    clamp(from: Float, to: Float): Float
        target js sync "return Math.min(Math.max(self_, from_), to_)"
    
    lerp(that: Float, factor: Float): Float {
        self + factor * (that - self)
    }
    
    smoothstep(that: Float, factor: Float): Float {
        let t = ((factor - self) / (that - self)).clamp(0.0, 1.0)
        t * t * (3.0 - 2.0 * t)
    }
    
    expDecay(that: Float, decay: Float, factor: Float): Float {
        that + (self - that) * (-decay * factor).exp()
    }
    
    acos(): Float
        target js sync """
            return Math.acos(self_);
        """
        
    acosh(): Float
        target js sync """
            return Math.acosh(self_);
        """
        
    asin(): Float
        target js sync """
            return Math.asin(self_);
        """
        
    asinh(): Float
        target js sync """
            return Math.asinh(self_);
        """
        
    atan(): Float
        target js sync """
            return Math.atan(self_);
        """
        
    atan2(that: Float): Float
        target js sync """
            return Math.atan2(self_, that_);
        """
        
    atanh(): Float
        target js sync """
            return Math.atanh(self_);
        """
        
    cbrt(): Float
        target js sync """
            return Math.cbrt(self_);
        """
        
    cos(): Float
        target js sync """
            return Math.cos(self_);
        """
        
    cosh(): Float
        target js sync """
            return Math.cosh(self_);
        """
        
    exp(): Float
        target js sync """
            return Math.exp(self_);
        """
        
    expm1(): Float
        target js sync """
            return Math.expm1(self_);
        """
        
    log(that: Float): Float
        target js sync """
            return Math.log2(self_) / Math.log2(that_);
        """
        
    log10(): Float
        target js sync """
            return Math.log10(self_);
        """
        
    log2(): Float
        target js sync """
            return Math.log2(self_);
        """
        
    ln(): Float
        target js sync """
            return Math.log(self_);
        """
        
    ln1p(): Float
        target js sync """
            return Math.log1p(self_);
        """
        
    sin(): Float
        target js sync """
            return Math.sin(self_);
        """
        
    sinh(): Float
        target js sync """
            return Math.sinh(self_);
        """
        
    sqrt(): Float
        target js sync """
            return Math.sqrt(self_);
        """
        
    tan(): Float
        target js sync """
            return Math.tan(self_);
        """
        
    tanh(): Float
        target js sync """
            return Math.tanh(self_);
        """
        
}

hypot(values: List[Float]): Float
    target js sync """
        return Math.hypot(...values_);
    """

e(): Float
    target js sync """
        return Math.E;
    """

ln10(): Float
    target js sync """
        return Math.LN10;
    """

ln2(): Float
    target js sync """
        return Math.LN2;
    """

log10e(): Float
    target js sync """
        return Math.LOG10E;
    """

log2e(): Float
    target js sync """
        return Math.LOG2E;
    """

pi(): Float
    target js sync """
        return Math.PI;
    """

sqrtHalf(): Float
    target js sync """
        return Math.SQRT1_2;
    """

sqrt2(): Float
    target js sync """
        return Math.SQRT2;
    """
