type Float {}

extend self: Float {

    toInt(): Int { panic("magic") }
        target js sync "return Math.trunc(Math.abs(self_))"

    round(): Float { panic("magic") }
        target js sync "return Math.round(self_)"

    floor(): Float { panic("magic") }
        target js sync "return Math.floor(self_)"

    ceil(): Float { panic("magic") }
        target js sync "return Math.ceil(self_)"

    truncate(): Float { panic("magic") }
        target js sync "return Math.trunc(self_)"

    sign(): Float { panic("magic") }
        target js sync "return Math.sign(self_)"

    abs(): Float { panic("magic") }
        target js sync "return Math.abs(self_)"

    toFixed(digits: Int): String { panic("magic") }
        target js sync "return self_.toFixed(digits_)"

}
