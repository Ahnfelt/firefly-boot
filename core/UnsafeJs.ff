jsSystem(): JsSystem {
    jsSystem() // Replaced by the compiler
}

import(module: String): JsValue {
    panic("import module parameter must be a string literal") // Replaced by the compiler
}

await(promise: JsValue): JsValue {
    await(promise) // Replaced by the compiler
}

throwIfCancelled(): Unit {
    throwIfCancelled() // Replaced by the compiler
}

cancelled(): Bool {
    cancelled() // Replaced by the compiler
}

inAsync(): Bool {
    inAsync() // Replaced by the compiler
}
    
inBrowser(): Bool {
    inBrowser() // Replaced by the compiler
}
    
inNode(): Bool {
    inNode() // Replaced by the compiler
}
    
inBuild(): Bool {
    inBuild() // Replaced by the compiler
}

value[T](value: T): JsValue {
    value! // Replaced by the compiler
}

fromValue[T](value: JsValue): T {
    value? // Replaced by the compiler
}
