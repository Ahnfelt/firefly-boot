type ArrayBuilder[T] {} // (items: T...)

extend self[T]: ArrayBuilder[T] {
    getArray(): Array[T] { panic("magic") }
    getEmpty(): Bool { panic("magic") }
    getSize(): Int { panic("magic") }
    append(value: T): Unit { panic("magic") }
    modify(index: Int, body: T => T): Unit { panic("magic") }
    drain(): Array[T] { panic("magic") }
    getList(): List[T] { panic("magic") }
    getLast(): Option[T] { panic("magic") }
    expectLast(): T { panic("magic") }
}
