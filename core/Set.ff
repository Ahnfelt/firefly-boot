type Set[T](map: Map[T, Unit])

empty[T](): Set[T] {
    Set(Map.empty())
}

extend self[T]: Set[T] {
    add(value: T): Set[T] { Set(self.map.add(value, Unit)) }
    addAll(that: Set[T]): Set[T] { Set(self.map.addAll(that.map)) }
    remove(value: T) : Set[T] { Set(self.map.remove(value)) }
    contains(value: T): Bool { self.map.contains(value) }
}
