capability BrowserSystem {}

extend self: BrowserSystem {

    fetch(): FetchSystem
        target js async "return null"

    scope[T](body: TaskScope => T, shielded: Bool = False, rethrow: Bool = True): T {
        let scope = self.openScope(shielded)
        try {
            body(scope)
        } finally {
            scope.close(rethrow)
        } grab()
    }

    openScope[T](shielded: Bool = False): TaskScope
        target js async """
            return await ff_core_TaskScope.TaskScope_openSubscope$($c, shielded_, $c)
        """
    
    time(): TimeSystem
        target js async "return null"

    js(): JsSystem
        target js async "return typeof globalThis !== 'undefined' ? globalThis : window"

}
