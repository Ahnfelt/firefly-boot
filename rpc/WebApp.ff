import WebServer from ff:webserver
import Rpc

nodeMain(system: NodeSystem): Unit {
    let handlers = Rpc.make()
    handlers.add {helloRpc(_, _)}
    
    WebServer.make(system, "localhost", 8080).listen {request =>
        if(request.readPath() == "/") {
            request.writeHeader("Content-Type", "text/html; charset=UTF-8")
            request.writeText("<!doctype html>")
            request.writeText("<script type='module' src='/js/ff/rpc/WebApp.mjs'></script>")
        } elseIf {request.readPath().startsWith("/rpc/")} {
            let name = request.readPath().dropFirst("/rpc/".size())
            let output = handlers.handle(name, system, request.readBuffer()).grab()
            request.writeHeader("Content-Type", "application/octet-stream")
            request.writeBuffer(output)
        } elseIf {request.readPath().startsWith("/js/") && !request.readPath().contains("..")} {
            request.writeHeader("Content-Type", "text/javascript; charset=UTF-8")
            request.writeText(system.assets().readText(request.readPath()))
        } else {
            request.writeStatus("404 Not found")
        }
    }
}

buildMain(system: BuildSystem) {
    let browser = system.compileForBrowser("WebApp.ff")
    let assets = AssetSystem.create().addAssets("/js", browser.assets())
    system.setAssets(assets)
}


browserMain(system: BrowserSystem): Unit {
    let rpc = Rpc.httpClient(system.httpClient(), "/rpc/")
    let response = rpc.call(HelloRpc("John"))
    let window = system.js().global().get("window")
    window.call1("alert", response)
}

data HelloRpc(name: String)
instance HelloRpc: Rpc[String] {}

helloRpc(nodeSystem: NodeSystem, message: HelloRpc): String {
    "Hello, " + message.name
}
