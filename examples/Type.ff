type Type {
    TConstructor(name: String, generics: List[Type])
    TVariable(id: Int)
}

Type_substitute(type: Type, substitution: Map[Int, Type]): Type {
    | TVariable(id), _ =>
        substitution(id)
    | TConstructor c, _ =>
        c.TConstructor(generics = c.generics.map { _.substitute(substitution) })
}

